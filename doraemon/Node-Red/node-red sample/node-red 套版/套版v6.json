[
    {
        "id": "cef3c77c.1f93b8",
        "type": "tab",
        "label": "product",
        "disabled": false,
        "info": ""
    },
    {
        "id": "3987ddd7.1eac82",
        "type": "tab",
        "label": "demo",
        "disabled": false,
        "info": ""
    },
    {
        "id": "abf4d1c6.97531",
        "type": "tab",
        "label": "Power ON_tag",
        "disabled": false,
        "info": ""
    },
    {
        "id": "b920ea59.74bac8",
        "type": "tab",
        "label": "Power time",
        "disabled": false,
        "info": ""
    },
    {
        "id": "1d6815dd.b3faaa",
        "type": "tab",
        "label": "check power off tag",
        "disabled": false,
        "info": ""
    },
    {
        "id": "97a60c8f.aa291",
        "type": "tab",
        "label": "Total Utilization",
        "disabled": false,
        "info": ""
    },
    {
        "id": "3f489316.51490c",
        "type": "tab",
        "label": "count detect",
        "disabled": false,
        "info": ""
    },
    {
        "id": "29b56909.768396",
        "type": "tab",
        "label": "PUT Connectivity / Qold config Request",
        "disabled": false,
        "info": ""
    },
    {
        "id": "f932de4a.a19c4",
        "type": "subflow",
        "name": "operate detection",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 80,
                "y": 40,
                "wires": [
                    {
                        "id": "ef565d6a.745eb"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 760,
                "y": 220,
                "wires": [
                    {
                        "id": "af26fe8.6ab6f",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "channel_id",
                "type": "str",
                "value": ""
            },
            {
                "name": "pre_processing_sec",
                "type": "num",
                "value": "0"
            },
            {
                "name": "post_processing_sec",
                "type": "num",
                "value": "0"
            }
        ]
    },
    {
        "id": "7d8ac10d.e9278",
        "type": "subflow",
        "name": "query state changed",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 80,
                "y": 60,
                "wires": [
                    {
                        "id": "3041dd02.343ca2"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 420,
                "y": 400,
                "wires": [
                    {
                        "id": "1dd13047.00371",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "device_id",
                "type": "str",
                "value": ""
            },
            {
                "name": "channel_id",
                "type": "str",
                "value": ""
            },
            {
                "name": "pretreatment_sec",
                "type": "num",
                "value": "0"
            },
            {
                "name": "post_processing_sec",
                "type": "num",
                "value": "0"
            }
        ]
    },
    {
        "id": "b21e5ed3.f60f7",
        "type": "subflow",
        "name": "Tag Power ON OFF",
        "info": "Input:\n\n- `msg.params`\n    ```\n    {\n        DEVICE_ID: 'bender_event'\n    ]\n    ```\n- `msg.payload`\n\nOutput:\n\n- `msg.payload`",
        "category": "",
        "in": [
            {
                "x": 120,
                "y": 240,
                "wires": [
                    {
                        "id": "31fa33e6.3c587c"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 900,
                "y": 280,
                "wires": [
                    {
                        "id": "4f4e6571.e8d1cc",
                        "port": 0
                    }
                ]
            }
        ],
        "env": []
    },
    {
        "id": "6d5fe9c2.7d2bd8",
        "type": "subflow",
        "name": "Clear Microseconds",
        "info": "Clear msg.payload.at microseconds to `0`\n",
        "category": "",
        "in": [
            {
                "x": 240,
                "y": 160,
                "wires": [
                    {
                        "id": "c4376377.b2ef1"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 540,
                "y": 160,
                "wires": [
                    {
                        "id": "c4376377.b2ef1",
                        "port": 0
                    }
                ]
            }
        ],
        "env": []
    },
    {
        "id": "e967087c.382728",
        "type": "subflow",
        "name": "Event",
        "info": "Input:\n\n- `msg.params.BASE_DEVICE_ID`\n- `msg.params.ZONE`\n- `msg.params.CHANNEL_ID`\n- `msg.params.EVENT_ID`\n- `msg.params.INIT_VALUE`\n- `msg.params.VALUE_TO_STATE`\n    ```\n    [\n        {\n            VALUE: 0\n            STATE: 0\n        },\n        {\n            VALUE: 1\n            STATE: 1\n        }\n    ]\n    ```\n- `msg.payload`\n\nOutput:\n\n- `msg.payload`\n",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 220,
                "wires": [
                    {
                        "id": "e818809a.88a01"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1000,
                "y": 300,
                "wires": [
                    {
                        "id": "58df16e3.939658",
                        "port": 0
                    }
                ]
            }
        ],
        "env": []
    },
    {
        "id": "762d9b07.9b23d4",
        "type": "subflow",
        "name": "Tag Working Stop",
        "info": "Input:\n\n- `msg.params.BASE_DEVICE_ID`\n- `msg.params.QUERY_SINCE`\n- `msg.params.CHANNEL_WORKING_CODE`\n    ```\n    {\n        Y0: [\n            {\n                VALUE: 1,\n                CODE: 1\n            },\n            {\n                VALUE: 0,\n                CODE: 2\n            }\n        ]\n    }\n    ```\n- `msg.params.PATTERNS`\n    ```\n    [15, 21, 31, 33, 32, 34, 16, 36, 20, 18, 14, 35]\n    ```\n\nOutput:\n\n- `msg.payload`",
        "category": "",
        "in": [
            {
                "x": 240,
                "y": 120,
                "wires": [
                    {
                        "id": "d7ecf289.3e2b7"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 660,
                "y": 260,
                "wires": [
                    {
                        "id": "c2ddfb8c.dc4348",
                        "port": 0
                    }
                ]
            }
        ],
        "env": []
    },
    {
        "id": "cf89e9f7.b66bf8",
        "type": "subflow",
        "name": "Bender Alarm",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 180,
                "y": 260,
                "wires": [
                    {
                        "id": "cad7bc92.ef339"
                    },
                    {
                        "id": "6ec913de.3f6aac"
                    },
                    {
                        "id": "7a0ede49.cbaee"
                    },
                    {
                        "id": "d09bbe47.e6685"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 860,
                "y": 260,
                "wires": [
                    {
                        "id": "4ac9f6b7.4c8ff8",
                        "port": 0
                    },
                    {
                        "id": "30653c29.9b3174",
                        "port": 0
                    },
                    {
                        "id": "894e9b86.c16af8",
                        "port": 0
                    },
                    {
                        "id": "bad2a7c6.548b08",
                        "port": 0
                    }
                ]
            }
        ],
        "env": []
    },
    {
        "id": "4772b21.fbfcc4c",
        "type": "subflow",
        "name": "Bender Working",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 160,
                "y": 380,
                "wires": [
                    {
                        "id": "4960b647.09d4d8"
                    },
                    {
                        "id": "15a8d306.7a445d"
                    },
                    {
                        "id": "94cc0900.08b048"
                    },
                    {
                        "id": "d5fd34ee.cf46a8"
                    },
                    {
                        "id": "3e9a14cd.fd779c"
                    },
                    {
                        "id": "1601fc54.77a234"
                    },
                    {
                        "id": "ddf2957b.c76928"
                    },
                    {
                        "id": "cf9fff4c.ae46e"
                    },
                    {
                        "id": "dc085b86.b16628"
                    },
                    {
                        "id": "1c4f3560.408cab"
                    },
                    {
                        "id": "a52f70c2.29b4c"
                    },
                    {
                        "id": "b5bdf81c.0d1668"
                    },
                    {
                        "id": "c354e1b2.59506"
                    },
                    {
                        "id": "b34398b4.102208"
                    },
                    {
                        "id": "7909debc.d6fd6"
                    },
                    {
                        "id": "79e00a63.cdb284"
                    },
                    {
                        "id": "e92dbf89.d9108"
                    },
                    {
                        "id": "2756655.a5ac99a"
                    },
                    {
                        "id": "b095b9fe.702108"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 860,
                "y": 380,
                "wires": [
                    {
                        "id": "de0fd85b.9d5048",
                        "port": 0
                    },
                    {
                        "id": "feaa106a.1c53b",
                        "port": 0
                    },
                    {
                        "id": "3663ccb8.d55ea4",
                        "port": 0
                    },
                    {
                        "id": "8df904dd.4121d8",
                        "port": 0
                    },
                    {
                        "id": "15d2565.7b7c6aa",
                        "port": 0
                    },
                    {
                        "id": "7621f4c3.842abc",
                        "port": 0
                    },
                    {
                        "id": "e457f49f.2529f8",
                        "port": 0
                    },
                    {
                        "id": "d0d11c1c.335dd",
                        "port": 0
                    },
                    {
                        "id": "6fe95ac6.f04ca4",
                        "port": 0
                    },
                    {
                        "id": "d9875554.687ed8",
                        "port": 0
                    },
                    {
                        "id": "1d73bec4.99d691",
                        "port": 0
                    },
                    {
                        "id": "afe7460e.a2c1e8",
                        "port": 0
                    },
                    {
                        "id": "29f6be8b.6067f2",
                        "port": 0
                    },
                    {
                        "id": "9462561e.1a1848",
                        "port": 0
                    },
                    {
                        "id": "314a39b9.124526",
                        "port": 0
                    },
                    {
                        "id": "542cbc39.b92a94",
                        "port": 0
                    },
                    {
                        "id": "c10cdcf8.59f7",
                        "port": 0
                    },
                    {
                        "id": "4df0a31d.c4ff6c",
                        "port": 0
                    },
                    {
                        "id": "5d142f41.85824",
                        "port": 0
                    }
                ]
            }
        ],
        "env": []
    },
    {
        "id": "caa59bf5.e21088",
        "type": "subflow",
        "name": "Welder Working",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 240,
                "y": 200,
                "wires": [
                    {
                        "id": "a5204bf5.b08b08"
                    },
                    {
                        "id": "603abcdc.26f744"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 780,
                "y": 200,
                "wires": [
                    {
                        "id": "a8d968f8.6f5528",
                        "port": 0
                    },
                    {
                        "id": "4cb97b09.68dd04",
                        "port": 0
                    }
                ]
            }
        ],
        "env": []
    },
    {
        "id": "ab6263c.69128a",
        "type": "subflow",
        "name": "Welder Alarm",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 180,
                "y": 280,
                "wires": [
                    {
                        "id": "433ccce0.3afde4"
                    },
                    {
                        "id": "fb44e19a.9dcc7"
                    },
                    {
                        "id": "ded6d91d.943ac8"
                    },
                    {
                        "id": "a54f41e1.7aac4"
                    },
                    {
                        "id": "89f54ac5.f10b58"
                    },
                    {
                        "id": "6ed800f9.db833"
                    },
                    {
                        "id": "205539e1.b10636"
                    },
                    {
                        "id": "9c526b7f.257208"
                    },
                    {
                        "id": "5bb9e329.6b667c"
                    },
                    {
                        "id": "565e4362.9c866c"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 860,
                "y": 280,
                "wires": [
                    {
                        "id": "7534bef5.ece92",
                        "port": 0
                    },
                    {
                        "id": "ab2b984b.0bd4a8",
                        "port": 0
                    },
                    {
                        "id": "8b164ffe.4b527",
                        "port": 0
                    },
                    {
                        "id": "4e07fec1.6fc7b",
                        "port": 0
                    },
                    {
                        "id": "9b886eb9.59ea5",
                        "port": 0
                    },
                    {
                        "id": "bee5fc97.aceac",
                        "port": 0
                    },
                    {
                        "id": "367a13c.aaee8ec",
                        "port": 0
                    },
                    {
                        "id": "53887f9a.286c4",
                        "port": 0
                    },
                    {
                        "id": "bd1ea16a.a155",
                        "port": 0
                    },
                    {
                        "id": "946fbc5.0391f4",
                        "port": 0
                    }
                ]
            }
        ],
        "env": []
    },
    {
        "id": "c9bb0997.ce4998",
        "type": "subflow",
        "name": "Manual Bender Alarm",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 260,
                "y": 280,
                "wires": [
                    {
                        "id": "18ccdc90.8fca63"
                    },
                    {
                        "id": "253ae9c0.6db836"
                    },
                    {
                        "id": "1608c630.d6ac7a"
                    },
                    {
                        "id": "e1b7379f.fd0dc8"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 920,
                "y": 280,
                "wires": [
                    {
                        "id": "e23f31e7.87fda",
                        "port": 0
                    },
                    {
                        "id": "24c475c8.5ed7aa",
                        "port": 0
                    },
                    {
                        "id": "38508416.000cac",
                        "port": 0
                    },
                    {
                        "id": "20eca5f2.f608ba",
                        "port": 0
                    }
                ]
            }
        ],
        "env": []
    },
    {
        "id": "8c7bb3d1.2fe6f",
        "type": "subflow",
        "name": "Manual Bender Working",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 320,
                "y": 240,
                "wires": [
                    {
                        "id": "e1134c40.b069c"
                    },
                    {
                        "id": "737da920.b35cf8"
                    },
                    {
                        "id": "81dc2349.0e51d"
                    },
                    {
                        "id": "3ed032b4.705bae"
                    },
                    {
                        "id": "25574ee5.0b5c82"
                    },
                    {
                        "id": "4d4048e9.95c018"
                    },
                    {
                        "id": "ad3d02cb.9e6ac"
                    },
                    {
                        "id": "b1d6294e.4f8d98"
                    },
                    {
                        "id": "8b120145.4da16"
                    },
                    {
                        "id": "26d9c084.1c99b"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1000,
                "y": 240,
                "wires": [
                    {
                        "id": "27df988.0263e68",
                        "port": 0
                    },
                    {
                        "id": "56e98e50.7ce35",
                        "port": 0
                    },
                    {
                        "id": "41ce5d2e.b568c4",
                        "port": 0
                    },
                    {
                        "id": "699f0e04.7ebe5",
                        "port": 0
                    },
                    {
                        "id": "1c669aa2.4191b5",
                        "port": 0
                    },
                    {
                        "id": "85d8fdaa.7635c",
                        "port": 0
                    },
                    {
                        "id": "bbeb9126.6108a",
                        "port": 0
                    },
                    {
                        "id": "98a86525.930888",
                        "port": 0
                    },
                    {
                        "id": "ec6a4bff.b3e278",
                        "port": 0
                    },
                    {
                        "id": "afc382cb.31164",
                        "port": 0
                    }
                ]
            }
        ],
        "env": []
    },
    {
        "id": "8edceab3.f3fe58",
        "type": "subflow",
        "name": "Stamping Press Alarm",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 320,
                "wires": [
                    {
                        "id": "dcec619c.c9dde"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 880,
                "y": 320,
                "wires": [
                    {
                        "id": "fc06ad8e.e64f1",
                        "port": 0
                    },
                    {
                        "id": "2fd335df.6b863a",
                        "port": 0
                    },
                    {
                        "id": "d2d9c183.5278f",
                        "port": 0
                    },
                    {
                        "id": "40ccb52a.aad97c",
                        "port": 0
                    },
                    {
                        "id": "4ea06e79.7e6cd",
                        "port": 0
                    },
                    {
                        "id": "c147271c.f9e4f8",
                        "port": 0
                    },
                    {
                        "id": "ee2998dd.eeffc8",
                        "port": 0
                    },
                    {
                        "id": "262231e2.84908e",
                        "port": 0
                    },
                    {
                        "id": "a94d60f9.f7d3",
                        "port": 0
                    },
                    {
                        "id": "e7995c8.db9e0a",
                        "port": 0
                    },
                    {
                        "id": "51eef2ac.cf552c",
                        "port": 0
                    },
                    {
                        "id": "f6a69939.ace628",
                        "port": 0
                    },
                    {
                        "id": "c29e3c35.5e3b4",
                        "port": 0
                    }
                ]
            }
        ],
        "env": []
    },
    {
        "id": "89e3dd2d.48591",
        "type": "subflow",
        "name": "Production Info Count",
        "info": "Input:\n\n- `msg.params.BASE_DEVICE_ID`\n- `msg.params.LAST_WORKING_STOP_AT`\n- `msg.params.CIRCLE_PRE_COUNT`\n\nOutput:\n\n- `msg.payload`",
        "category": "",
        "in": [
            {
                "x": 260,
                "y": 100,
                "wires": [
                    {
                        "id": "4c2423a.9de22dc"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 540,
                "y": 300,
                "wires": [
                    {
                        "id": "36a218ad.2c9e28",
                        "port": 0
                    }
                ]
            }
        ],
        "env": []
    },
    {
        "id": "22034728.b8ab18",
        "type": "subflow",
        "name": "Production Info Utilization",
        "info": "Input:\n\n- `msg.params.BASE_DEVICE_ID`\n- `msg.params.LAST_WORKING_STOP_AT`\n\nOutput:\n\n- `msg.payload`",
        "category": "",
        "in": [
            {
                "x": 220,
                "y": 120,
                "wires": [
                    {
                        "id": "8a4e061d.94c3c8"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 560,
                "y": 360,
                "wires": [
                    {
                        "id": "96e1de54.5586b",
                        "port": 0
                    }
                ]
            }
        ],
        "env": []
    },
    {
        "id": "d0be88d0.4b1d78",
        "type": "subflow",
        "name": "Stamping Press Production Info Count",
        "info": "Input:\n\n- `msg.params.BASE_DEVICE_ID`\n- `msg.params.CHANNEL_ID`\n- `msg.params.LAST_COUNT_CHANGED_AT`\n\n- `msg.payload`\n\nOutput:\n\n- `msg.payload`",
        "category": "",
        "in": [
            {
                "x": 360,
                "y": 60,
                "wires": [
                    {
                        "id": "effeb698.b5a838"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 760,
                "y": 260,
                "wires": [
                    {
                        "id": "72e96871.038118",
                        "port": 0
                    }
                ]
            }
        ],
        "env": []
    },
    {
        "id": "ab40f84.3a06e08",
        "type": "subflow",
        "name": "power on/off state",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 80,
                "y": 120,
                "wires": [
                    {
                        "id": "5b985143.5ec65"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 620,
                "y": 140,
                "wires": [
                    {
                        "id": "3652935d.b3ff7c",
                        "port": 0
                    },
                    {
                        "id": "c495fe0a.fe82f",
                        "port": 0
                    }
                ]
            }
        ],
        "env": []
    },
    {
        "id": "2aa655a1.c3766a",
        "type": "subflow",
        "name": "get begin/end time",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 80,
                "y": 60,
                "wires": [
                    {
                        "id": "9371be04.a3b22"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 480,
                "y": 180,
                "wires": [
                    {
                        "id": "d8945226.40e3c",
                        "port": 0
                    }
                ]
            }
        ],
        "env": []
    },
    {
        "id": "234039dd.2e06c6",
        "type": "subflow",
        "name": "query state changed",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 80,
                "y": 60,
                "wires": [
                    {
                        "id": "fc566939.23b3c8"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 420,
                "y": 400,
                "wires": [
                    {
                        "id": "861f950.b2b7068",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "device_id",
                "type": "str",
                "value": ""
            },
            {
                "name": "channel_id",
                "type": "str",
                "value": ""
            },
            {
                "name": "pretreatment_sec",
                "type": "num",
                "value": "0"
            },
            {
                "name": "post_processing_sec",
                "type": "num",
                "value": "0"
            }
        ]
    },
    {
        "id": "81fd677e.0a3c88",
        "type": "subflow",
        "name": "query count event",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 100,
                "y": 80,
                "wires": [
                    {
                        "id": "7de6f5a.b3f160c"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 440,
                "y": 280,
                "wires": [
                    {
                        "id": "7b354a8e.315d74",
                        "port": 0
                    }
                ]
            }
        ],
        "env": []
    },
    {
        "id": "41d5e1f9.f8d97",
        "type": "subflow",
        "name": "query channel begin/end time",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 100,
                "y": 80,
                "wires": [
                    {
                        "id": "3262c9.b2389d38"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 460,
                "y": 300,
                "wires": [
                    {
                        "id": "6d93c360.fd3f8c",
                        "port": 0
                    }
                ]
            }
        ],
        "env": []
    },
    {
        "id": "8dfcbe36.856d6",
        "type": "subflow",
        "name": "query lastest data",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 120,
                "y": 80,
                "wires": [
                    {
                        "id": "ec9467af.e21408"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 500,
                "y": 280,
                "wires": [
                    {
                        "id": "53e799ff.7795b8",
                        "port": 0
                    }
                ]
            }
        ],
        "env": []
    },
    {
        "id": "cac8a52f.506a38",
        "type": "subflow",
        "name": "Subflow 1",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 100,
                "y": 100,
                "wires": [
                    {
                        "id": "f0addc7.4e2d52"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 640,
                "y": 300,
                "wires": [
                    {
                        "id": "776d7c51.2c1854",
                        "port": 0
                    }
                ]
            }
        ],
        "env": []
    },
    {
        "id": "9c54c667.4c0218",
        "type": "mqtt-broker",
        "z": "",
        "name": "",
        "broker": "localhost",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "compatmode": true,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "53a85cb3.644994",
        "type": "modbus-client",
        "z": "",
        "name": "",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": true,
        "tcpHost": "127.0.0.1",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "unit_id": "1",
        "commandDelay": "1",
        "clientTimeout": "1000",
        "reconnectTimeout": "2000"
    },
    {
        "id": "9deb799b.549158",
        "type": "mqtt-broker",
        "z": "",
        "name": "",
        "broker": "localhost",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "compatmode": true,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "b19ce441.55c708",
        "type": "modbus-client",
        "z": "",
        "name": "",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": true,
        "tcpHost": "127.0.0.1",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "unit_id": "1",
        "commandDelay": "1",
        "clientTimeout": "1000",
        "reconnectTimeout": "2000"
    },
    {
        "id": "ce376bc4.b388a8",
        "type": "modbus-client",
        "z": "",
        "name": "",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "tcpHost": "192.168.60.6",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "unit_id": "1",
        "commandDelay": "1",
        "clientTimeout": "1000",
        "reconnectTimeout": "2000"
    },
    {
        "id": "71c0541d.66089c",
        "type": "modbus-client",
        "z": "",
        "name": "",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "tcpHost": "192.168.60.6",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "unit_id": "1",
        "commandDelay": "1",
        "clientTimeout": "1000",
        "reconnectTimeout": "2000"
    },
    {
        "id": "28d8212f.35a9fe",
        "type": "modbus-client",
        "z": "",
        "name": "",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "tcpHost": "192.168.60.6",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "unit_id": "1",
        "commandDelay": "1",
        "clientTimeout": "1000",
        "reconnectTimeout": "2000"
    },
    {
        "id": "c039e333.f1502",
        "type": "mqtt-broker",
        "z": "",
        "name": "",
        "broker": "localhost",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "compatmode": true,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "42c6dbf2.69c3c4",
        "type": "modbus-client",
        "z": "",
        "name": "",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": true,
        "tcpHost": "127.0.0.1",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "unit_id": 1,
        "commandDelay": 1,
        "clientTimeout": 1000,
        "reconnectTimeout": 2000
    },
    {
        "id": "6253c9c1.f70d08",
        "type": "tls-config",
        "z": "",
        "name": "",
        "cert": "",
        "key": "",
        "ca": "",
        "certname": "",
        "keyname": "",
        "caname": "",
        "servername": "",
        "verifyservercert": true,
        "info": "{\n  \"username\": \"admin\",\n  \"password\": \"p@55w0rd\"\n}"
    },
    {
        "id": "8fc4611d.87edb8",
        "type": "qi-chameleon-source",
        "z": "cef3c77c.1f93b8",
        "name": "",
        "deviceId": "barcode-scanner",
        "x": 230,
        "y": 80,
        "wires": [
            [
                "83d568bc.194a58"
            ]
        ]
    },
    {
        "id": "1a80d34a.0e6575",
        "type": "function",
        "z": "cef3c77c.1f93b8",
        "name": "get barcode",
        "func": "const barcode = msg.payload.channels.barcode\nconst at = msg.payload.at\n\nmsg.payload = barcode\nmsg.args.trigger_at = at\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 170,
        "y": 140,
        "wires": [
            [
                "e1b12271.75663"
            ]
        ]
    },
    {
        "id": "e1b12271.75663",
        "type": "function",
        "z": "cef3c77c.1f93b8",
        "name": "get count",
        "func": "const barcode = msg.payload\n\nconst PRODUCTION_COUNT_MAP = {\n    \"K29220002\": 5,\n    \"N73110005\": 15,\n    \"I050L7Z08\": 33,\n    \"I05NW7301\": 100,\n    \"C16180006\": 150,\n    \"Abcdefg567\": 300\n}\n\nconst count = PRODUCTION_COUNT_MAP[barcode]\nif (count === undefined)\n{\n    return\n}\n\nmsg.payload = count\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 340,
        "y": 140,
        "wires": [
            [
                "c197f2a0.b0f0e"
            ]
        ]
    },
    {
        "id": "c197f2a0.b0f0e",
        "type": "function",
        "z": "cef3c77c.1f93b8",
        "name": "build virtual dev data",
        "func": "const pro_count = msg.payload\nconst at = msg.args.trigger_at\n\nflow.set(\"now_count\", pro_count)\n\n// msg.payload = {\n//     \"deviceId\": \"loader\",\n//     \"at\": at,\n//     \"channels\": {\n//         \"count\": pro_count\n\n//     }\n// }\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 200,
        "y": 200,
        "wires": [
            [
                "45099efd.9b1848"
            ]
        ]
    },
    {
        "id": "83d568bc.194a58",
        "type": "function",
        "z": "cef3c77c.1f93b8",
        "name": "init args",
        "func": "msg.args = {}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 480,
        "y": 80,
        "wires": [
            [
                "1a80d34a.0e6575",
                "d921eed8.86a4c"
            ]
        ]
    },
    {
        "id": "45099efd.9b1848",
        "type": "debug",
        "z": "cef3c77c.1f93b8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 590,
        "y": 200,
        "wires": []
    },
    {
        "id": "d921eed8.86a4c",
        "type": "debug",
        "z": "cef3c77c.1f93b8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 740,
        "y": 60,
        "wires": []
    },
    {
        "id": "fc3e14bb.0eaee8",
        "type": "qi-chameleon-source",
        "z": "cef3c77c.1f93b8",
        "name": "",
        "deviceId": "Mitsubishi",
        "x": 210,
        "y": 340,
        "wires": [
            [
                "c251422e.bcc75"
            ]
        ]
    },
    {
        "id": "b05ce0c6.c8bb68",
        "type": "function",
        "z": "cef3c77c.1f93b8",
        "name": "product count",
        "func": "const now_count = flow.get(\"now_count\")\nlet accu_count = flow.get(\"accu_count\")\n\nconst at = msg.payload.at\n\nif (now_count === undefined)\n{\n    return\n}\n\nif (accu_count === undefined)\n{\n    accu_count = 0\n}\n\naccu_count += now_count\n\nflow.set(\"accu_count\", accu_count)\n\nmsg.payload = {\n    \"deviceId\": \"loader\",\n    \"at\": at,\n    \"channels\": {\n        \"count\": now_count,\n        \"total_count\": accu_count\n\n    }\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 160,
        "y": 520,
        "wires": [
            [
                "448adee3.80607",
                "bd35e6bd.1d0ff8"
            ]
        ]
    },
    {
        "id": "4203445b.4171ec",
        "type": "qi-forward-on-change",
        "z": "cef3c77c.1f93b8",
        "name": "",
        "initialValue": "{}",
        "initialValueType": "json",
        "useInitialValue": false,
        "x": 370,
        "y": 400,
        "wires": [
            [
                "c89b5f8.85352a",
                "3e3989f7.f855e6"
            ]
        ]
    },
    {
        "id": "88ba6510.a340f8",
        "type": "qi-forward-on-match",
        "z": "cef3c77c.1f93b8",
        "name": "lastest procedure",
        "schema": "{\"$schema\":\"http://json-schema.org/draft-07/schema#\",\"type\":\"object\",\"required\":[\"deviceId\",\"at\",\"channels\"],\"properties\":{\"deviceId\":{\"type\":\"string\"},\"at\":{\"type\":\"object\",\"required\":[\"sec\",\"us\"],\"properties\":{\"sec\":{\"type\":\"integer\",\"minimum\":0},\"us\":{\"type\":\"integer\",\"minimum\":0,\"maximum\":999999}}},\"channels\":{\"type\":\"object\",\"required\":[\"Y007\"],\"properties\":{\"Y007\":{\"type\":\"integer\"}}}}}",
        "schemaType": "json",
        "removeAdditional": true,
        "x": 170,
        "y": 400,
        "wires": [
            [
                "4203445b.4171ec"
            ]
        ]
    },
    {
        "id": "c89b5f8.85352a",
        "type": "debug",
        "z": "cef3c77c.1f93b8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 610,
        "y": 400,
        "wires": []
    },
    {
        "id": "c251422e.bcc75",
        "type": "function",
        "z": "cef3c77c.1f93b8",
        "name": "init args",
        "func": "msg.args = {}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 440,
        "y": 340,
        "wires": [
            [
                "88ba6510.a340f8"
            ]
        ]
    },
    {
        "id": "448adee3.80607",
        "type": "qi-chameleon-sink",
        "z": "cef3c77c.1f93b8",
        "name": "",
        "x": 170,
        "y": 600,
        "wires": []
    },
    {
        "id": "bd35e6bd.1d0ff8",
        "type": "debug",
        "z": "cef3c77c.1f93b8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 610,
        "y": 520,
        "wires": []
    },
    {
        "id": "852c2a96.1c8328",
        "type": "mqtt in",
        "z": "3987ddd7.1eac82",
        "name": "",
        "topic": "/out/devices/Air_Quality_Sensor/readings",
        "qos": "1",
        "datatype": "auto",
        "broker": "9c54c667.4c0218",
        "x": 160,
        "y": 360,
        "wires": [
            [
                "fc402655.8c35f8"
            ]
        ]
    },
    {
        "id": "fc402655.8c35f8",
        "type": "json",
        "z": "3987ddd7.1eac82",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 410,
        "y": 360,
        "wires": [
            [
                "847ae6f8.d5a698",
                "9a4d7db1.fae3c",
                "5f20ae82.cf553"
            ]
        ]
    },
    {
        "id": "847ae6f8.d5a698",
        "type": "function",
        "z": "3987ddd7.1eac82",
        "name": "get_CO2",
        "func": "for (var i = 0; i < msg.payload.channels.length; ++i)\n{\n    if (msg.payload.channels[i].channelId == \"CO2\")\n    {\n        msg.payload = msg.payload.channels[i].value.num\n        \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 600,
        "y": 240,
        "wires": [
            [
                "989d22bc.48893"
            ]
        ]
    },
    {
        "id": "9a4d7db1.fae3c",
        "type": "function",
        "z": "3987ddd7.1eac82",
        "name": "get_temperature",
        "func": "for (var i = 0; i < msg.payload.channels.length; ++i)\n{\n    if (msg.payload.channels[i].channelId == \"temperature\")\n    {\n        msg.payload = msg.payload.channels[i].value.num * 10\n        \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 620,
        "y": 360,
        "wires": [
            [
                "c08a120e.af718"
            ]
        ]
    },
    {
        "id": "5f20ae82.cf553",
        "type": "function",
        "z": "3987ddd7.1eac82",
        "name": "get_humidity",
        "func": "for (var i = 0; i < msg.payload.channels.length; ++i)\n{\n    if (msg.payload.channels[i].channelId == \"humidity\")\n    {\n        msg.payload = msg.payload.channels[i].value.num * 10\n        \n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 610,
        "y": 480,
        "wires": [
            [
                "88be53a1.c9e"
            ]
        ]
    },
    {
        "id": "989d22bc.48893",
        "type": "modbus-write",
        "z": "3987ddd7.1eac82",
        "name": "",
        "showStatusActivities": true,
        "showErrors": true,
        "unitid": "2",
        "dataType": "HoldingRegister",
        "adr": "0",
        "quantity": "1",
        "server": "53a85cb3.644994",
        "x": 840,
        "y": 240,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "c08a120e.af718",
        "type": "modbus-write",
        "z": "3987ddd7.1eac82",
        "name": "",
        "showStatusActivities": true,
        "showErrors": true,
        "unitid": "2",
        "dataType": "HoldingRegister",
        "adr": "1",
        "quantity": "1",
        "server": "53a85cb3.644994",
        "x": 840,
        "y": 360,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "88be53a1.c9e",
        "type": "modbus-write",
        "z": "3987ddd7.1eac82",
        "name": "",
        "showStatusActivities": true,
        "showErrors": true,
        "unitid": "2",
        "dataType": "HoldingRegister",
        "adr": "2",
        "quantity": "1",
        "server": "53a85cb3.644994",
        "x": 840,
        "y": 480,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "3e3989f7.f855e6",
        "type": "function",
        "z": "cef3c77c.1f93b8",
        "name": "is complete",
        "func": "const Y007_state = msg.payload.channels[\"Y007\"]\n\nconst pre_Y007_state = flow.get(\"pre_Y007_state\")\nflow.set(\"pre_Y007_state\", Y007_state)\n\nif (pre_Y007_state === undefined)\n{\n    return\n}\n\nif (pre_Y007_state !== 1 || Y007_state !== 0)\n{\n    return\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 150,
        "y": 460,
        "wires": [
            [
                "b05ce0c6.c8bb68",
                "9c1146b2.e235f"
            ]
        ]
    },
    {
        "id": "9c1146b2.e235f",
        "type": "debug",
        "z": "cef3c77c.1f93b8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 610,
        "y": 460,
        "wires": []
    },
    {
        "id": "a2fdb9ae.90c078",
        "type": "function",
        "z": "f932de4a.a19c4",
        "name": "omit count reset",
        "func": "const is_init = msg.args.is_init\nconst count = msg.args.count\n\nif (is_init === false &&\n    count === 0)\n{\n    return\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 140,
        "y": 200,
        "wires": [
            [
                "5095c534.4ddf7c",
                "608799c6.d0f258"
            ]
        ]
    },
    {
        "id": "608799c6.d0f258",
        "type": "function",
        "z": "f932de4a.a19c4",
        "name": "punch begin",
        "func": "const pre_state_name = msg.args.pre_state_name\nconst is_init = msg.args.is_init\nconst pre_state = flow.get(pre_state_name)\n\nif (is_init === true)\n{\n    flow.set(pre_state_name, 0)\n    return\n}\n\nif (pre_state === 1)\n{\n    return\n}\n\nflow.set(pre_state_name, 1)\n\nmsg.args = {\n    \"state\": 1\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 370,
        "y": 200,
        "wires": [
            [
                "af26fe8.6ab6f"
            ]
        ]
    },
    {
        "id": "a9dd02d7.a4aa3",
        "type": "function",
        "z": "f932de4a.a19c4",
        "name": "punch end",
        "func": "flow.set(msg.args.pre_state_name, 0)\n\nmsg.args = {\n    \"state\": 0\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 370,
        "y": 240,
        "wires": [
            [
                "af26fe8.6ab6f"
            ]
        ]
    },
    {
        "id": "5095c534.4ddf7c",
        "type": "trigger",
        "z": "f932de4a.a19c4",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "12",
        "extend": true,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "name": "",
        "x": 150,
        "y": 240,
        "wires": [
            [
                "a9dd02d7.a4aa3"
            ]
        ]
    },
    {
        "id": "af26fe8.6ab6f",
        "type": "function",
        "z": "f932de4a.a19c4",
        "name": "merge to output",
        "func": "const device_id = msg.payload.deviceId\nconst at = msg.payload.at\nconst state = msg.args.state\n\nconst pre_processing_sec = env.get(\"pre_processing_sec\")\nconst post_processing_sec = env.get(\"post_processing_sec\")\n\nlet at_sec = null\nif (state === 1)\n{\n    at_sec = at.sec - pre_processing_sec\n}\nelse if (state === 0)\n{\n    at_sec = at.sec + post_processing_sec\n}\n\nmsg.payload = {\n    \"at\": {\n        \"sec\": at_sec,\n        \"us\": at.us\n    },\n    \"deviceId\": device_id,\n    \"state\": state\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 580,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "ef565d6a.745eb",
        "type": "function",
        "z": "f932de4a.a19c4",
        "name": "validate env variable",
        "func": "const ENV = [\n    \"channel_id\",\n    \"pre_processing_sec\",\n    \"post_processing_sec\"\n]\n\nfor (var item in ENV)\n{\n    const v = env.get(ENV[item])\n    if (v === '' || v === undefined)\n    {\n        node.error(ENV[item] + \" env variable not set\")\n        return\n    }\n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 280,
        "y": 40,
        "wires": [
            [
                "8311dccd.e8277"
            ]
        ]
    },
    {
        "id": "8311dccd.e8277",
        "type": "function",
        "z": "f932de4a.a19c4",
        "name": "set args",
        "func": "msg.args = {\n  \"pre_state_name\": \"pre_state\",\n  \"count\": msg.payload.channels[env.get(\"channel_id\")]\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 140,
        "y": 120,
        "wires": [
            [
                "e340631e.2c691"
            ]
        ]
    },
    {
        "id": "e340631e.2c691",
        "type": "function",
        "z": "f932de4a.a19c4",
        "name": "check init",
        "func": "let is_init = context.get(\"nc_is_init\")\n\nif (is_init === undefined)\n{\n    is_init = true\n}\n\ncontext.set(\"nc_is_init\", false)\n\nmsg.args.is_init = is_init\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 340,
        "y": 120,
        "wires": [
            [
                "a2fdb9ae.90c078"
            ]
        ]
    },
    {
        "id": "d7adfb70.213b58",
        "type": "function",
        "z": "7d8ac10d.e9278",
        "name": "query changed",
        "func": "const begin_time = msg.args.utilization_begin_time\nconst end_time = msg.args.utilization_end_time\n\nconst device_id = env.get(\"device_id\")\nconst channel_id = env.get(\"channel_id\")\n\nmsg.query = `\n    SELECT \"${channel_id}\"\n    FROM \"${device_id}\"\n    WHERE time >= '${begin_time.toISOString()}'\n    AND time < '${end_time.toISOString()}'\n`\n\nnode.log(msg.query)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 140,
        "y": 140,
        "wires": [
            [
                "cb91d1ff.2d15c"
            ]
        ]
    },
    {
        "id": "cb91d1ff.2d15c",
        "type": "qi-query-history",
        "z": "7d8ac10d.e9278",
        "name": "",
        "query": "",
        "x": 340,
        "y": 140,
        "wires": [
            [
                "53b3169f.cab128"
            ]
        ]
    },
    {
        "id": "53b3169f.cab128",
        "type": "function",
        "z": "7d8ac10d.e9278",
        "name": "save changed_list",
        "func": "msg.args.changed_list = msg.payload\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 150,
        "y": 180,
        "wires": [
            [
                "3d64d14b.4f4f7e"
            ]
        ]
    },
    {
        "id": "3d64d14b.4f4f7e",
        "type": "function",
        "z": "7d8ac10d.e9278",
        "name": "query previous state",
        "func": "const begin_time = msg.args.utilization_begin_time\n\nconst device_id = env.get(\"device_id\")\nconst channel_id = env.get(\"channel_id\")\n\nmsg.query = `\n    SELECT \"${channel_id}\"\n    FROM \"${device_id}\"\n    WHERE time < '${begin_time.toISOString()}'\n    ORDER BY time DESC\n    LIMIT 1\n`\n\nnode.log(msg.query)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 160,
        "y": 260,
        "wires": [
            [
                "284eed9.a3b7e12"
            ]
        ]
    },
    {
        "id": "284eed9.a3b7e12",
        "type": "qi-query-history",
        "z": "7d8ac10d.e9278",
        "name": "",
        "query": "",
        "x": 380,
        "y": 260,
        "wires": [
            [
                "93fca158.a505d"
            ]
        ]
    },
    {
        "id": "93fca158.a505d",
        "type": "function",
        "z": "7d8ac10d.e9278",
        "name": "append previous state",
        "func": "const pre_state_list = msg.payload\nchanged_list = msg.args.changed_list\n\nif (pre_state_list.length !== 0)\n{\n    changed_list.unshift(pre_state_list[0])\n}\n\nmsg.payload = changed_list\nmsg.changed_list = undefined\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 160,
        "y": 300,
        "wires": [
            [
                "ad228a79.07f838"
            ]
        ]
    },
    {
        "id": "ad228a79.07f838",
        "type": "function",
        "z": "7d8ac10d.e9278",
        "name": "remove duplicated state",
        "func": "const changed_list = msg.payload\nconst channel_id = env.get(\"channel_id\")\n\nlet rtn_changed = []\nlet now_state = undefined\n\nchanged_list.forEach(function(item){\n    if (item[channel_id] !== now_state)\n    {\n        rtn_changed.push(item)\n        now_state = item[channel_id]\n    }\n})\n\nmsg.payload = rtn_changed\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 170,
        "y": 360,
        "wires": [
            [
                "1dd13047.00371"
            ]
        ]
    },
    {
        "id": "1dd13047.00371",
        "type": "function",
        "z": "7d8ac10d.e9278",
        "name": "add lead/production time",
        "func": "const channel_id = env.get(\"channel_id\")\nconst pretreatment_sec = env.get(\"pretreatment_sec\")\nconst post_processing_sec = env.get(\"post_processing_sec\")\n\nconst trigger_time = msg.args.trigger_time\nconst changed_list = msg.payload\n\nlet rtn_changed_list = []\nfor (let ax = 0; ax < changed_list.length; ++ax)\n{\n    let item = changed_list[ax]\n    if (item[channel_id] === 1)\n    {\n        let with_lead_time = new Date(item.time - pretreatment_sec * 1000)\n        let pre_stop_item = rtn_changed_list[ax - 1]\n\n        if (pre_stop_item !== undefined &&\n            pre_stop_item.time >= with_lead_time)\n        {\n            rtn_changed_list.pop()\n            continue;\n        }\n\n        rtn_changed_list.push({\n            \"time\": with_lead_time,\n            \"changed\": item[channel_id]\n        })\n    }\n    else if (item[channel_id] === 0)\n    {\n        let with_production_time = item.time\n        with_production_time.setSeconds(\n            with_production_time.getSeconds() + post_processing_sec)\n\n        rtn_changed_list.push({\n            \"time\": with_production_time,\n            \"changed\": item[channel_id]\n        })\n    }\n}\n\nif (rtn_changed_list.length !== 0 &&\n    rtn_changed_list.slice(-1)[0].time > trigger_time)\n{\n    let latest = rtn_changed_list.pop()\n\n    rtn_changed_list.push({\n        \"time\": new Date(trigger_time - 1),\n        \"changed\": latest['changed']\n    })\n}\n\nmsg.payload = rtn_changed_list\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 170,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "3041dd02.343ca2",
        "type": "function",
        "z": "7d8ac10d.e9278",
        "name": "variable validation",
        "func": "const ENV = [\n    \"device_id\",\n    \"channel_id\",\n    \"pretreatment_sec\",\n    \"post_processing_sec\"\n]\n\nconst ARGS = [\n    \"utilization_begin_time\",\n    \"utilization_end_time\",\n    \"trigger_time\"\n]\n\nfor (let item in ENV)\n{\n    const v = env.get(ENV[item])\n    if (v === '' || v === undefined)\n    {\n        node.error(ENV[item] + \" env variable not set\")\n        return\n    }\n}\n\nfor (let item in ARGS)\n{\n    const v = msg.args[ARGS[item]]\n    if (v === undefined)\n    {\n        node.error(ARGS[item] + \" not set in msg.args\")\n        return\n    }\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 250,
        "y": 60,
        "wires": [
            [
                "d7adfb70.213b58"
            ]
        ]
    },
    {
        "id": "3df3419e.9d61de",
        "type": "qi-chameleon-source",
        "z": "abf4d1c6.97531",
        "name": "",
        "deviceId": "fx5u-100m",
        "x": 170,
        "y": 80,
        "wires": [
            [
                "bc36eb52.539b08"
            ]
        ]
    },
    {
        "id": "d0d39dd7.5ec8b",
        "type": "qi-chameleon-sink",
        "z": "abf4d1c6.97531",
        "name": "",
        "x": 440,
        "y": 200,
        "wires": []
    },
    {
        "id": "c8ff864b.f559b8",
        "type": "trigger",
        "z": "b21e5ed3.f60f7",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "20",
        "extend": true,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "name": "",
        "x": 430,
        "y": 320,
        "wires": [
            [
                "8d3b876b.4b3238"
            ]
        ]
    },
    {
        "id": "f0a82bd1.17d0a8",
        "type": "function",
        "z": "b21e5ed3.f60f7",
        "name": "on",
        "func": "const DEVICE_ID = env.get(\"device_id\")\n\nvar at = msg.payload.at\n\nmsg.payload = {\n    \"deviceId\": DEVICE_ID,\n    \"at\": at,\n    \"channels\": {\n        \"power_on_tag\": 1\n    }\n}\n\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "x": 570,
        "y": 240,
        "wires": [
            [
                "4f4e6571.e8d1cc"
            ]
        ]
    },
    {
        "id": "8d3b876b.4b3238",
        "type": "function",
        "z": "b21e5ed3.f60f7",
        "name": "off",
        "func": "const DEVICE_ID = env.get(\"device_id\")\n\nvar at = msg.payload.at\n\nmsg.payload = {\n    \"deviceId\": DEVICE_ID,\n    \"at\": at,\n    \"channels\": {\n        \"power_on_tag\": 0\n    }\n}\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 590,
        "y": 320,
        "wires": [
            [
                "4f4e6571.e8d1cc"
            ]
        ]
    },
    {
        "id": "31fa33e6.3c587c",
        "type": "function",
        "z": "b21e5ed3.f60f7",
        "name": "validate env variable",
        "func": "const ENV = [\n    \"device_id\"\n]\n\nfor (var item in ENV)\n{\n    const v = env.get(ENV[item])\n    if (v === '' || v === undefined)\n    {\n        node.error(ENV[item] + \" env variable not set\")\n        return\n    }\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 300,
        "y": 240,
        "wires": [
            [
                "c8ff864b.f559b8",
                "f0a82bd1.17d0a8"
            ]
        ]
    },
    {
        "id": "c4376377.b2ef1",
        "type": "function",
        "z": "6d5fe9c2.7d2bd8",
        "name": "clear us",
        "func": "const us = msg.payload.at.us\n\nmsg.payload.at.us = Math.floor(us / 1000) * 1000\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 380,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "6117ed2a.5476e4",
        "type": "qi-forward-on-match",
        "z": "e967087c.382728",
        "name": "filter channel",
        "schema": "schema",
        "schemaType": "msg",
        "removeAdditional": true,
        "x": 550,
        "y": 220,
        "wires": [
            [
                "959fd3fc.f65ff"
            ]
        ]
    },
    {
        "id": "e818809a.88a01",
        "type": "function",
        "z": "e967087c.382728",
        "name": "flow.params",
        "func": "if (typeof msg.params.BASE_DEVICE_ID === 'undefined' ||\n        typeof msg.params.ZONE === 'undefined' ||\n        typeof msg.params.CHANNEL_ID === 'undefined' ||\n        typeof msg.params.EVENT_ID === 'undefined' ||\n        typeof msg.params.INIT_VALUE === 'undefined' ||\n        typeof msg.params.VALUE_TO_STATE === 'undefined') {\n    node.error('illegal msg.params')\n    return\n}\n\nflow.set(\n    [\n        'BASE_DEVICE_ID',\n        'ZONE',\n        'CHANNEL_ID',\n        'EVENT_ID',\n        'INIT_VALUE',\n        'VALUE_TO_STATE'\n    ],\n    [\n        msg.params.BASE_DEVICE_ID,\n        msg.params.ZONE,\n        msg.params.CHANNEL_ID,\n        msg.params.EVENT_ID,\n        msg.params.INIT_VALUE,\n        msg.params.VALUE_TO_STATE\n    ]\n)\n\ndelete msg.params\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 230,
        "y": 220,
        "wires": [
            [
                "5d2721a8.f2ea2",
                "2e7fef88.cd9fe"
            ]
        ]
    },
    {
        "id": "5d2721a8.f2ea2",
        "type": "function",
        "z": "e967087c.382728",
        "name": "schema",
        "func": "const CHANNEL_ID = flow.get('CHANNEL_ID')\n\nconst channels = [CHANNEL_ID]\nlet channel_properties = {}\n\nchannel_properties[CHANNEL_ID] = {type: 'number'}\n\nmsg.schema = {\n    \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n    \"type\": \"object\",\n    \"required\": [\n        \"deviceId\",\n        \"at\",\n        \"channels\"\n    ],\n    \"properties\": {\n        \"deviceId\": {\n            \"type\": \"string\"\n        },\n        \"at\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"sec\",\n                \"us\"\n            ],\n            \"properties\": {\n                \"sec\": {\n                    \"type\": \"integer\",\n                    \"minimum\": 0\n                },\n                \"us\": {\n                    \"type\": \"integer\",\n                    \"minimum\": 0,\n                    \"maximum\": 999999\n                }\n            }\n        },\n        \"channels\": {\n            \"type\": \"object\",\n            \"required\": channels,\n            \"properties\": channel_properties\n        }\n    }\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 400,
        "y": 220,
        "wires": [
            [
                "6117ed2a.5476e4"
            ]
        ]
    },
    {
        "id": "552825c0.da94cc",
        "type": "function",
        "z": "762d9b07.9b23d4",
        "name": "query not processed working",
        "func": "const QUERY_SINCE = flow.get('QUERY_SINCE')\n\nconst from = flow.get('BASE_DEVICE_ID') + '_working'\nconst since = QUERY_SINCE.toISOString()\n\nmsg.query = `\n    SELECT *\n    FROM ${from}\n    WHERE time >= '${since}'\n`\n\n// node.error(msg.query)\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 460,
        "y": 160,
        "wires": [
            [
                "51ba4cb4.18df44"
            ]
        ]
    },
    {
        "id": "51ba4cb4.18df44",
        "type": "qi-query-history",
        "z": "762d9b07.9b23d4",
        "name": "",
        "query": "",
        "x": 440,
        "y": 200,
        "wires": [
            [
                "c2ddfb8c.dc4348"
            ]
        ]
    },
    {
        "id": "c2ddfb8c.dc4348",
        "type": "function",
        "z": "762d9b07.9b23d4",
        "name": "working stop",
        "func": "const matched = msg.matched\n\nconst device_id = flow.get('BASE_DEVICE_ID') + '_event'\nconst tail = matched[matched.length - 1]\n\nmsg.payload = {\n    \"deviceId\": device_id,\n    \"at\": _format_at(tail.time),\n    \"channels\": {\n        \"working\": 0\n    }\n}\n\nreturn msg\n\nfunction _format_at(epoch_milliseconds)\n{\n    return {\n        \"sec\": Math.floor(epoch_milliseconds / 1000),\n        \"us\": (epoch_milliseconds % 1000) * 1000\n    }\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 450,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "d7ecf289.3e2b7",
        "type": "function",
        "z": "762d9b07.9b23d4",
        "name": "flow.params",
        "func": "if (typeof msg.params.BASE_DEVICE_ID === 'undefined' ||\n        typeof msg.params.QUERY_SINCE === 'undefined'||\n        typeof msg.params.CHANNEL_WORKING_CODE === 'undefined' ||\n        typeof msg.params.PATTERNS === 'undefined') {\n    node.error('illegal msg.params')\n    return\n}\n\nflow.set(\n    [\n        'BASE_DEVICE_ID',\n        'QUERY_SINCE',\n        'CHANNEL_WORKING_CODE',\n        'PATTERNS'\n    ],\n    [\n        msg.params.BASE_DEVICE_ID,\n        msg.params.QUERY_SINCE,\n        msg.params.CHANNEL_WORKING_CODE,\n        msg.params.PATTERNS\n    ]\n)\n\ndelete msg.params\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 410,
        "y": 120,
        "wires": [
            [
                "552825c0.da94cc"
            ]
        ]
    },
    {
        "id": "bc36eb52.539b08",
        "type": "subflow:6d5fe9c2.7d2bd8",
        "z": "abf4d1c6.97531",
        "name": "",
        "env": [],
        "x": 450,
        "y": 80,
        "wires": [
            [
                "278cc5bc.269f8a"
            ]
        ]
    },
    {
        "id": "959fd3fc.f65ff",
        "type": "qi-forward-on-change",
        "z": "e967087c.382728",
        "name": "",
        "initialValue": "",
        "initialValueType": "json",
        "useInitialValue": false,
        "x": 910,
        "y": 220,
        "wires": [
            [
                "db55ee2c.4f451"
            ]
        ]
    },
    {
        "id": "58df16e3.939658",
        "type": "function",
        "z": "e967087c.382728",
        "name": "event",
        "func": "const DEVICE_ID = flow.get('BASE_DEVICE_ID') + '_' + flow.get('ZONE')\nconst CHANNEL_ID = flow.get('CHANNEL_ID')\nconst EVENT_ID = flow.get('EVENT_ID')\nconst VALUE_TO_STATE = flow.get('VALUE_TO_STATE')\n\nconst at = msg.payload.at\nconst value = msg.payload.channels[CHANNEL_ID]\n\nlet channel = {}\n\nVALUE_TO_STATE.forEach(\n    function(item)\n    {\n        if (value === item.VALUE)\n        {\n            channel[EVENT_ID] = item.STATE\n        }\n    }\n)\n\nif (!channel.hasOwnProperty(EVENT_ID))\n{\n    node.error(CHANNEL_ID + ': ' + value + ' undefined')\n    return\n}\n\nmsg.payload = {\n    deviceId: DEVICE_ID,\n    at: at,\n    channels: channel\n}\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 890,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "db55ee2c.4f451",
        "type": "function",
        "z": "e967087c.382728",
        "name": "pass",
        "func": "const INIT_VALUE = flow.get('INIT_VALUE')\nconst CHANNEL_ID = flow.get('CHANNEL_ID')\nconst channels = msg.payload.channels\n\nconst initialized = context.get('initialized')\n\nif (initialized === undefined)\n{\n    context.set('initialized', true)\n    \n    if (INIT_VALUE !== undefined &&\n            channels[CHANNEL_ID] === INIT_VALUE)\n    {\n        return\n    }\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 890,
        "y": 260,
        "wires": [
            [
                "58df16e3.939658"
            ]
        ]
    },
    {
        "id": "cad7bc92.ef339",
        "type": "function",
        "z": "cf89e9f7.b66bf8",
        "name": "X0 parameters",
        "func": "msg.params = {\n    BASE_DEVICE_ID: 'bender',\n    ZONE: 'event',\n    CHANNEL_ID: 'X0',\n    EVENT_ID: 'emergency_stop',\n    INIT_VALUE: 0,\n    VALUE_TO_STATE : [\n        {\n            VALUE: 0,\n            STATE: 0\n        },\n        {\n            VALUE: 1,\n            STATE: 1\n        }\n    ]\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 440,
        "y": 200,
        "wires": [
            [
                "4ac9f6b7.4c8ff8"
            ]
        ]
    },
    {
        "id": "4ac9f6b7.4c8ff8",
        "type": "subflow:e967087c.382728",
        "z": "cf89e9f7.b66bf8",
        "name": "",
        "env": [],
        "x": 610,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "6ec913de.3f6aac",
        "type": "function",
        "z": "cf89e9f7.b66bf8",
        "name": "X40 parameters",
        "func": "msg.params = {\n    BASE_DEVICE_ID: 'bender',\n    ZONE: 'event',\n    CHANNEL_ID: 'X40',\n    EVENT_ID: 'oil_pressure_motor_1_alarm',\n    INIT_VALUE: 0,\n    VALUE_TO_STATE : [\n        {\n            VALUE: 0,\n            STATE: 0\n        },\n        {\n            VALUE: 1,\n            STATE: 1\n        }\n    ]\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 440,
        "y": 240,
        "wires": [
            [
                "30653c29.9b3174"
            ]
        ]
    },
    {
        "id": "30653c29.9b3174",
        "type": "subflow:e967087c.382728",
        "z": "cf89e9f7.b66bf8",
        "name": "",
        "x": 610,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "7a0ede49.cbaee",
        "type": "function",
        "z": "cf89e9f7.b66bf8",
        "name": "X41 parameters",
        "func": "msg.params = {\n    BASE_DEVICE_ID: 'bender',\n    ZONE: 'event',\n    CHANNEL_ID: 'X41',\n    EVENT_ID: 'oil_pressure_motor_2_alarm',\n    INIT_VALUE: 0,\n    VALUE_TO_STATE : [\n        {\n            VALUE: 0,\n            STATE: 0\n        },\n        {\n            VALUE: 1,\n            STATE: 1\n        }\n    ]\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 440,
        "y": 280,
        "wires": [
            [
                "894e9b86.c16af8"
            ]
        ]
    },
    {
        "id": "894e9b86.c16af8",
        "type": "subflow:e967087c.382728",
        "z": "cf89e9f7.b66bf8",
        "name": "",
        "x": 610,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "d09bbe47.e6685",
        "type": "function",
        "z": "cf89e9f7.b66bf8",
        "name": "X42 parameters",
        "func": "msg.params = {\n    BASE_DEVICE_ID: 'bender',\n    ZONE: 'event',\n    CHANNEL_ID: 'X42',\n    EVENT_ID: 'server_motor_alarm',\n    INIT_VALUE: 0,\n    VALUE_TO_STATE : [\n        {\n            VALUE: 0,\n            STATE: 0\n        },\n        {\n            VALUE: 1,\n            STATE: 1\n        }\n    ]\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 440,
        "y": 320,
        "wires": [
            [
                "bad2a7c6.548b08"
            ]
        ]
    },
    {
        "id": "bad2a7c6.548b08",
        "type": "subflow:e967087c.382728",
        "z": "cf89e9f7.b66bf8",
        "name": "",
        "x": 610,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "4960b647.09d4d8",
        "type": "function",
        "z": "4772b21.fbfcc4c",
        "name": "Y0 parameters",
        "func": "msg.params = {\n    BASE_DEVICE_ID: 'bender',\n    ZONE: 'working',\n    CHANNEL_ID: 'Y0',\n    EVENT_ID: 'Y0',\n    INIT_VALUE: 0,\n    VALUE_TO_STATE : [\n        {\n            VALUE: 0,\n            STATE: 0\n        },\n        {\n            VALUE: 1,\n            STATE: 1\n        }\n    ]\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 440,
        "y": 40,
        "wires": [
            [
                "de0fd85b.9d5048"
            ]
        ]
    },
    {
        "id": "de0fd85b.9d5048",
        "type": "subflow:e967087c.382728",
        "z": "4772b21.fbfcc4c",
        "name": "",
        "x": 610,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "15a8d306.7a445d",
        "type": "function",
        "z": "4772b21.fbfcc4c",
        "name": "Y01 parameters",
        "func": "msg.params = {\n    BASE_DEVICE_ID: 'bender',\n    ZONE: 'working',\n    CHANNEL_ID: 'Y01',\n    EVENT_ID: 'Y01',\n    INIT_VALUE: 0,\n    VALUE_TO_STATE : [\n        {\n            VALUE: 0,\n            STATE: 0\n        },\n        {\n            VALUE: 1,\n            STATE: 1\n        }\n    ]\n}\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 440,
        "y": 80,
        "wires": [
            [
                "feaa106a.1c53b"
            ]
        ]
    },
    {
        "id": "feaa106a.1c53b",
        "type": "subflow:e967087c.382728",
        "z": "4772b21.fbfcc4c",
        "name": "",
        "x": 610,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "94cc0900.08b048",
        "type": "function",
        "z": "4772b21.fbfcc4c",
        "name": "Y02 parameters",
        "func": "msg.params = {\n    BASE_DEVICE_ID: 'bender',\n    ZONE: 'working',\n    CHANNEL_ID: 'Y02',\n    EVENT_ID: 'Y02',\n    INIT_VALUE: 0,\n    VALUE_TO_STATE : [\n        {\n            VALUE: 0,\n            STATE: 0\n        },\n        {\n            VALUE: 1,\n            STATE: 1\n        }\n    ]\n}\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 440,
        "y": 120,
        "wires": [
            [
                "3663ccb8.d55ea4"
            ]
        ]
    },
    {
        "id": "3663ccb8.d55ea4",
        "type": "subflow:e967087c.382728",
        "z": "4772b21.fbfcc4c",
        "name": "",
        "x": 610,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "d5fd34ee.cf46a8",
        "type": "function",
        "z": "4772b21.fbfcc4c",
        "name": "Y03 parameters",
        "func": "msg.params = {\n    BASE_DEVICE_ID: 'bender',\n    ZONE: 'working',\n    CHANNEL_ID: 'Y03',\n    EVENT_ID: 'Y03',\n    INIT_VALUE: 0,\n    VALUE_TO_STATE : [\n        {\n            VALUE: 0,\n            STATE: 0\n        },\n        {\n            VALUE: 1,\n            STATE: 1\n        }\n    ]\n}\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 440,
        "y": 160,
        "wires": [
            [
                "8df904dd.4121d8"
            ]
        ]
    },
    {
        "id": "8df904dd.4121d8",
        "type": "subflow:e967087c.382728",
        "z": "4772b21.fbfcc4c",
        "name": "",
        "x": 610,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "3e9a14cd.fd779c",
        "type": "function",
        "z": "4772b21.fbfcc4c",
        "name": "Y04 parameters",
        "func": "msg.params = {\n    BASE_DEVICE_ID: 'bender',\n    ZONE: 'working',\n    CHANNEL_ID: 'Y04',\n    EVENT_ID: 'Y04',\n    INIT_VALUE: 0,\n    VALUE_TO_STATE : [\n        {\n            VALUE: 0,\n            STATE: 0\n        },\n        {\n            VALUE: 1,\n            STATE: 1\n        }\n    ]\n}\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 440,
        "y": 200,
        "wires": [
            [
                "15d2565.7b7c6aa"
            ]
        ]
    },
    {
        "id": "15d2565.7b7c6aa",
        "type": "subflow:e967087c.382728",
        "z": "4772b21.fbfcc4c",
        "name": "",
        "x": 610,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "1601fc54.77a234",
        "type": "function",
        "z": "4772b21.fbfcc4c",
        "name": "Y05 parameters",
        "func": "msg.params = {\n    BASE_DEVICE_ID: 'bender',\n    ZONE: 'working',\n    CHANNEL_ID: 'Y05',\n    EVENT_ID: 'Y05',\n    INIT_VALUE: 0,\n    VALUE_TO_STATE : [\n        {\n            VALUE: 0,\n            STATE: 0\n        },\n        {\n            VALUE: 1,\n            STATE: 1\n        }\n    ]\n}\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 440,
        "y": 240,
        "wires": [
            [
                "7621f4c3.842abc"
            ]
        ]
    },
    {
        "id": "7621f4c3.842abc",
        "type": "subflow:e967087c.382728",
        "z": "4772b21.fbfcc4c",
        "name": "",
        "x": 610,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "ddf2957b.c76928",
        "type": "function",
        "z": "4772b21.fbfcc4c",
        "name": "Y10 parameters",
        "func": "msg.params = {\n    BASE_DEVICE_ID: 'bender',\n    ZONE: 'working',\n    CHANNEL_ID: 'Y10',\n    EVENT_ID: 'Y10',\n    INIT_VALUE: 0,\n    VALUE_TO_STATE : [\n        {\n            VALUE: 0,\n            STATE: 0\n        },\n        {\n            VALUE: 1,\n            STATE: 1\n        }\n    ]\n}\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 440,
        "y": 280,
        "wires": [
            [
                "e457f49f.2529f8"
            ]
        ]
    },
    {
        "id": "e457f49f.2529f8",
        "type": "subflow:e967087c.382728",
        "z": "4772b21.fbfcc4c",
        "name": "",
        "x": 610,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "cf9fff4c.ae46e",
        "type": "function",
        "z": "4772b21.fbfcc4c",
        "name": "Y11 parameters",
        "func": "msg.params = {\n    BASE_DEVICE_ID: 'bender',\n    ZONE: 'working',\n    CHANNEL_ID: 'Y11',\n    EVENT_ID: 'Y11',\n    INIT_VALUE: 0,\n    VALUE_TO_STATE : [\n        {\n            VALUE: 0,\n            STATE: 0\n        },\n        {\n            VALUE: 1,\n            STATE: 1\n        }\n    ]\n}\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 440,
        "y": 320,
        "wires": [
            [
                "d0d11c1c.335dd"
            ]
        ]
    },
    {
        "id": "d0d11c1c.335dd",
        "type": "subflow:e967087c.382728",
        "z": "4772b21.fbfcc4c",
        "name": "",
        "x": 610,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "dc085b86.b16628",
        "type": "function",
        "z": "4772b21.fbfcc4c",
        "name": "Y12 parameters",
        "func": "msg.params = {\n    BASE_DEVICE_ID: 'bender',\n    ZONE: 'working',\n    CHANNEL_ID: 'Y12',\n    EVENT_ID: 'Y12',\n    INIT_VALUE: 0,\n    VALUE_TO_STATE : [\n        {\n            VALUE: 0,\n            STATE: 0\n        },\n        {\n            VALUE: 1,\n            STATE: 1\n        }\n    ]\n}\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 440,
        "y": 360,
        "wires": [
            [
                "6fe95ac6.f04ca4"
            ]
        ]
    },
    {
        "id": "6fe95ac6.f04ca4",
        "type": "subflow:e967087c.382728",
        "z": "4772b21.fbfcc4c",
        "name": "",
        "x": 610,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "1c4f3560.408cab",
        "type": "function",
        "z": "4772b21.fbfcc4c",
        "name": "Y13 parameters",
        "func": "msg.params = {\n    BASE_DEVICE_ID: 'bender',\n    ZONE: 'working',\n    CHANNEL_ID: 'Y13',\n    EVENT_ID: 'Y13',\n    INIT_VALUE: 0,\n    VALUE_TO_STATE : [\n        {\n            VALUE: 0,\n            STATE: 0\n        },\n        {\n            VALUE: 1,\n            STATE: 1\n        }\n    ]\n}\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 440,
        "y": 400,
        "wires": [
            [
                "d9875554.687ed8"
            ]
        ]
    },
    {
        "id": "d9875554.687ed8",
        "type": "subflow:e967087c.382728",
        "z": "4772b21.fbfcc4c",
        "name": "",
        "x": 610,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "a52f70c2.29b4c",
        "type": "function",
        "z": "4772b21.fbfcc4c",
        "name": "Y14 parameters",
        "func": "msg.params = {\n    BASE_DEVICE_ID: 'bender',\n    ZONE: 'working',\n    CHANNEL_ID: 'Y14',\n    EVENT_ID: 'Y14',\n    INIT_VALUE: 0,\n    VALUE_TO_STATE : [\n        {\n            VALUE: 0,\n            STATE: 0\n        },\n        {\n            VALUE: 1,\n            STATE: 1\n        }\n    ]\n}\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 440,
        "y": 440,
        "wires": [
            [
                "1d73bec4.99d691"
            ]
        ]
    },
    {
        "id": "1d73bec4.99d691",
        "type": "subflow:e967087c.382728",
        "z": "4772b21.fbfcc4c",
        "name": "",
        "x": 610,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "b5bdf81c.0d1668",
        "type": "function",
        "z": "4772b21.fbfcc4c",
        "name": "Y15 parameters",
        "func": "msg.params = {\n    BASE_DEVICE_ID: 'bender',\n    ZONE: 'working',\n    CHANNEL_ID: 'Y15',\n    EVENT_ID: 'Y15',\n    INIT_VALUE: 0,\n    VALUE_TO_STATE : [\n        {\n            VALUE: 0,\n            STATE: 0\n        },\n        {\n            VALUE: 1,\n            STATE: 1\n        }\n    ]\n}\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 440,
        "y": 480,
        "wires": [
            [
                "afe7460e.a2c1e8"
            ]
        ]
    },
    {
        "id": "afe7460e.a2c1e8",
        "type": "subflow:e967087c.382728",
        "z": "4772b21.fbfcc4c",
        "name": "",
        "x": 610,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "c354e1b2.59506",
        "type": "function",
        "z": "4772b21.fbfcc4c",
        "name": "Y20 parameters",
        "func": "msg.params = {\n    BASE_DEVICE_ID: 'bender',\n    ZONE: 'working',\n    CHANNEL_ID: 'Y20',\n    EVENT_ID: 'Y20',\n    INIT_VALUE: 0,\n    VALUE_TO_STATE : [\n        {\n            VALUE: 0,\n            STATE: 0\n        },\n        {\n            VALUE: 1,\n            STATE: 1\n        }\n    ]\n}\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 440,
        "y": 520,
        "wires": [
            [
                "29f6be8b.6067f2"
            ]
        ]
    },
    {
        "id": "29f6be8b.6067f2",
        "type": "subflow:e967087c.382728",
        "z": "4772b21.fbfcc4c",
        "name": "",
        "x": 610,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "b34398b4.102208",
        "type": "function",
        "z": "4772b21.fbfcc4c",
        "name": "Y21 parameters",
        "func": "msg.params = {\n    BASE_DEVICE_ID: 'bender',\n    ZONE: 'working',\n    CHANNEL_ID: 'Y21',\n    EVENT_ID: 'Y21',\n    INIT_VALUE: 0,\n    VALUE_TO_STATE : [\n        {\n            VALUE: 0,\n            STATE: 0\n        },\n        {\n            VALUE: 1,\n            STATE: 1\n        }\n    ]\n}\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 440,
        "y": 560,
        "wires": [
            [
                "9462561e.1a1848"
            ]
        ]
    },
    {
        "id": "9462561e.1a1848",
        "type": "subflow:e967087c.382728",
        "z": "4772b21.fbfcc4c",
        "name": "",
        "x": 610,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "7909debc.d6fd6",
        "type": "function",
        "z": "4772b21.fbfcc4c",
        "name": "Y26 parameters",
        "func": "msg.params = {\n    BASE_DEVICE_ID: 'bender',\n    ZONE: 'working',\n    CHANNEL_ID: 'Y26',\n    EVENT_ID: 'Y26',\n    INIT_VALUE: 0,\n    VALUE_TO_STATE : [\n        {\n            VALUE: 0,\n            STATE: 0\n        },\n        {\n            VALUE: 1,\n            STATE: 1\n        }\n    ]\n}\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 440,
        "y": 600,
        "wires": [
            [
                "314a39b9.124526"
            ]
        ]
    },
    {
        "id": "314a39b9.124526",
        "type": "subflow:e967087c.382728",
        "z": "4772b21.fbfcc4c",
        "name": "",
        "x": 610,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "79e00a63.cdb284",
        "type": "function",
        "z": "4772b21.fbfcc4c",
        "name": "Y34 parameters",
        "func": "msg.params = {\n    BASE_DEVICE_ID: 'bender',\n    ZONE: 'working',\n    CHANNEL_ID: 'Y34',\n    EVENT_ID: 'Y34',\n    INIT_VALUE: 0,\n    VALUE_TO_STATE : [\n        {\n            VALUE: 0,\n            STATE: 0\n        },\n        {\n            VALUE: 1,\n            STATE: 1\n        }\n    ]\n}\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 440,
        "y": 640,
        "wires": [
            [
                "542cbc39.b92a94"
            ]
        ]
    },
    {
        "id": "542cbc39.b92a94",
        "type": "subflow:e967087c.382728",
        "z": "4772b21.fbfcc4c",
        "name": "",
        "x": 610,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "e92dbf89.d9108",
        "type": "function",
        "z": "4772b21.fbfcc4c",
        "name": "Y35 parameters",
        "func": "msg.params = {\n    BASE_DEVICE_ID: 'bender',\n    ZONE: 'working',\n    CHANNEL_ID: 'Y35',\n    EVENT_ID: 'Y35',\n    INIT_VALUE: 0,\n    VALUE_TO_STATE : [\n        {\n            VALUE: 0,\n            STATE: 0\n        },\n        {\n            VALUE: 1,\n            STATE: 1\n        }\n    ]\n}\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 440,
        "y": 680,
        "wires": [
            [
                "c10cdcf8.59f7"
            ]
        ]
    },
    {
        "id": "c10cdcf8.59f7",
        "type": "subflow:e967087c.382728",
        "z": "4772b21.fbfcc4c",
        "name": "",
        "x": 610,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "2756655.a5ac99a",
        "type": "function",
        "z": "4772b21.fbfcc4c",
        "name": "Y40 parameters",
        "func": "msg.params = {\n    BASE_DEVICE_ID: 'bender',\n    ZONE: 'working',\n    CHANNEL_ID: 'Y40',\n    EVENT_ID: 'Y40',\n    INIT_VALUE: 0,\n    VALUE_TO_STATE : [\n        {\n            VALUE: 0,\n            STATE: 0\n        },\n        {\n            VALUE: 1,\n            STATE: 1\n        }\n    ]\n}\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 440,
        "y": 720,
        "wires": [
            [
                "4df0a31d.c4ff6c"
            ]
        ]
    },
    {
        "id": "4df0a31d.c4ff6c",
        "type": "subflow:e967087c.382728",
        "z": "4772b21.fbfcc4c",
        "name": "",
        "x": 610,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "b095b9fe.702108",
        "type": "function",
        "z": "4772b21.fbfcc4c",
        "name": "Y41 parameters",
        "func": "msg.params = {\n    BASE_DEVICE_ID: 'bender',\n    ZONE: 'working',\n    CHANNEL_ID: 'Y41',\n    EVENT_ID: 'Y41',\n    INIT_VALUE: 0,\n    VALUE_TO_STATE : [\n        {\n            VALUE: 0,\n            STATE: 0\n        },\n        {\n            VALUE: 1,\n            STATE: 1\n        }\n    ]\n}\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 440,
        "y": 760,
        "wires": [
            [
                "5d142f41.85824"
            ]
        ]
    },
    {
        "id": "5d142f41.85824",
        "type": "subflow:e967087c.382728",
        "z": "4772b21.fbfcc4c",
        "name": "",
        "x": 610,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "2e7fef88.cd9fe",
        "type": "qi-forward-on-match",
        "z": "e967087c.382728",
        "name": "filter power_on channel",
        "schema": "{\"$schema\":\"http://json-schema.org/draft-07/schema#\",\"type\":\"object\",\"required\":[\"deviceId\",\"at\",\"channels\"],\"properties\":{\"deviceId\":{\"type\":\"string\"},\"at\":{\"type\":\"object\",\"required\":[\"sec\",\"us\"],\"properties\":{\"sec\":{\"type\":\"integer\",\"minimum\":0},\"us\":{\"type\":\"integer\",\"minimum\":0,\"maximum\":999999}}},\"channels\":{\"type\":\"object\",\"required\":[\"power_on\"],\"properties\":{\"power_on\":{\"type\":\"number\",\"minimum\":0,\"maximum\":0}}}}}",
        "schemaType": "json",
        "removeAdditional": true,
        "x": 450,
        "y": 300,
        "wires": [
            [
                "71f55e05.cb599"
            ]
        ]
    },
    {
        "id": "71f55e05.cb599",
        "type": "function",
        "z": "e967087c.382728",
        "name": "clear",
        "func": "const DEVICE_ID = flow.get('BASE_DEVICE_ID')\nconst CHANNEL_ID = flow.get('CHANNEL_ID')\nconst INIT_VALUE = flow.get('INIT_VALUE')\n\nconst at = msg.payload.at\n\nlet channels = {}\nchannels[CHANNEL_ID] = INIT_VALUE\n\nmsg.payload = {\n    deviceId: DEVICE_ID,\n    at: at,\n    channels: channels\n}\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 650,
        "y": 300,
        "wires": [
            [
                "959fd3fc.f65ff"
            ]
        ]
    },
    {
        "id": "a5204bf5.b08b08",
        "type": "function",
        "z": "caa59bf5.e21088",
        "name": "Y21 parameters",
        "func": "msg.params = {\n    BASE_DEVICE_ID: 'welder',\n    ZONE: 'working',\n    CHANNEL_ID: 'Y21',\n    EVENT_ID: 'Y21',\n    INIT_VALUE: 0,\n    VALUE_TO_STATE : [\n        {\n            VALUE: 0,\n            STATE: 0\n        },\n        {\n            VALUE: 1,\n            STATE: 1\n        }\n    ]\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 440,
        "y": 180,
        "wires": [
            [
                "a8d968f8.6f5528"
            ]
        ]
    },
    {
        "id": "a8d968f8.6f5528",
        "type": "subflow:e967087c.382728",
        "z": "caa59bf5.e21088",
        "name": "",
        "x": 610,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "603abcdc.26f744",
        "type": "function",
        "z": "caa59bf5.e21088",
        "name": "D81 parameters",
        "func": "msg.params = {\n    BASE_DEVICE_ID: 'welder',\n    ZONE: 'working',\n    CHANNEL_ID: 'D81',\n    EVENT_ID: 'D81',\n    INIT_VALUE: 0,\n    VALUE_TO_STATE : [\n        {\n            VALUE: 11,\n            STATE: 0\n        },\n        {\n            VALUE: 1,\n            STATE: 1\n        }\n    ]\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 440,
        "y": 220,
        "wires": [
            [
                "4cb97b09.68dd04"
            ]
        ]
    },
    {
        "id": "4cb97b09.68dd04",
        "type": "subflow:e967087c.382728",
        "z": "caa59bf5.e21088",
        "name": "",
        "x": 610,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "433ccce0.3afde4",
        "type": "function",
        "z": "ab6263c.69128a",
        "name": "X4 parameters",
        "func": "msg.params = {\n    BASE_DEVICE_ID: 'welder',\n    ZONE: 'event',\n    CHANNEL_ID: 'X4',\n    EVENT_ID: 'emergency_stop',\n    INIT_VALUE: 0,\n    VALUE_TO_STATE : [\n        {\n            VALUE: 0,\n            STATE: 0\n        },\n        {\n            VALUE: 1,\n            STATE: 1\n        }\n    ]\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 440,
        "y": 140,
        "wires": [
            [
                "7534bef5.ece92"
            ]
        ]
    },
    {
        "id": "7534bef5.ece92",
        "type": "subflow:e967087c.382728",
        "z": "ab6263c.69128a",
        "name": "",
        "x": 630,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "fb44e19a.9dcc7",
        "type": "function",
        "z": "ab6263c.69128a",
        "name": "X24 parameters",
        "func": "msg.params = {\n    BASE_DEVICE_ID: 'welder',\n    ZONE: 'event',\n    CHANNEL_ID: 'X24',\n    EVENT_ID: 'x_axis_alarm',\n    INIT_VALUE: 0,\n    VALUE_TO_STATE : [\n        {\n            VALUE: 0,\n            STATE: 0\n        },\n        {\n            VALUE: 1,\n            STATE: 1\n        }\n    ]\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 440,
        "y": 180,
        "wires": [
            [
                "ab2b984b.0bd4a8"
            ]
        ]
    },
    {
        "id": "ab2b984b.0bd4a8",
        "type": "subflow:e967087c.382728",
        "z": "ab6263c.69128a",
        "name": "",
        "x": 630,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "ded6d91d.943ac8",
        "type": "function",
        "z": "ab6263c.69128a",
        "name": "X26 parameters",
        "func": "msg.params = {\n    BASE_DEVICE_ID: 'welder',\n    ZONE: 'event',\n    CHANNEL_ID: 'X26',\n    EVENT_ID: 'a_welder_alarm',\n    INIT_VALUE: 0,\n    VALUE_TO_STATE : [\n        {\n            VALUE: 0,\n            STATE: 0\n        },\n        {\n            VALUE: 1,\n            STATE: 1\n        }\n    ]\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 440,
        "y": 220,
        "wires": [
            [
                "8b164ffe.4b527"
            ]
        ]
    },
    {
        "id": "8b164ffe.4b527",
        "type": "subflow:e967087c.382728",
        "z": "ab6263c.69128a",
        "name": "",
        "x": 630,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "a54f41e1.7aac4",
        "type": "function",
        "z": "ab6263c.69128a",
        "name": "X30 parameters",
        "func": "msg.params = {\n    BASE_DEVICE_ID: 'welder',\n    ZONE: 'event',\n    CHANNEL_ID: 'X30',\n    EVENT_ID: 'b_welder_alarm',\n    INIT_VALUE: 0,\n    VALUE_TO_STATE : [\n        {\n            VALUE: 0,\n            STATE: 0\n        },\n        {\n            VALUE: 1,\n            STATE: 1\n        }\n    ]\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 440,
        "y": 260,
        "wires": [
            [
                "4e07fec1.6fc7b"
            ]
        ]
    },
    {
        "id": "4e07fec1.6fc7b",
        "type": "subflow:e967087c.382728",
        "z": "ab6263c.69128a",
        "name": "",
        "x": 630,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "89f54ac5.f10b58",
        "type": "function",
        "z": "ab6263c.69128a",
        "name": "X32 parameters",
        "func": "msg.params = {\n    BASE_DEVICE_ID: 'welder',\n    ZONE: 'event',\n    CHANNEL_ID: 'X32',\n    EVENT_ID: 'c_welder_alarm',\n    INIT_VALUE: 0,\n    VALUE_TO_STATE : [\n        {\n            VALUE: 0,\n            STATE: 0\n        },\n        {\n            VALUE: 1,\n            STATE: 1\n        }\n    ]\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 440,
        "y": 300,
        "wires": [
            [
                "9b886eb9.59ea5"
            ]
        ]
    },
    {
        "id": "9b886eb9.59ea5",
        "type": "subflow:e967087c.382728",
        "z": "ab6263c.69128a",
        "name": "",
        "x": 630,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "6ed800f9.db833",
        "type": "function",
        "z": "ab6263c.69128a",
        "name": "Y32 parameters",
        "func": "msg.params = {\n    BASE_DEVICE_ID: 'welder',\n    ZONE: 'event',\n    CHANNEL_ID: 'Y32',\n    EVENT_ID: 'gyr_r_light',\n    INIT_VALUE: 0,\n    VALUE_TO_STATE : [\n        {\n            VALUE: 0,\n            STATE: 0\n        },\n        {\n            VALUE: 1,\n            STATE: 1\n        }\n    ]\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 440,
        "y": 340,
        "wires": [
            [
                "bee5fc97.aceac"
            ]
        ]
    },
    {
        "id": "bee5fc97.aceac",
        "type": "subflow:e967087c.382728",
        "z": "ab6263c.69128a",
        "name": "",
        "x": 630,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "205539e1.b10636",
        "type": "function",
        "z": "ab6263c.69128a",
        "name": "Y33 parameters",
        "func": "msg.params = {\n    BASE_DEVICE_ID: 'welder',\n    ZONE: 'event',\n    CHANNEL_ID: 'Y33',\n    EVENT_ID: 'gyr_y_light',\n    INIT_VALUE: 0,\n    VALUE_TO_STATE : [\n        {\n            VALUE: 0,\n            STATE: 0\n        },\n        {\n            VALUE: 1,\n            STATE: 1\n        }\n    ]\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 440,
        "y": 380,
        "wires": [
            [
                "367a13c.aaee8ec"
            ]
        ]
    },
    {
        "id": "367a13c.aaee8ec",
        "type": "subflow:e967087c.382728",
        "z": "ab6263c.69128a",
        "name": "",
        "x": 630,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "9c526b7f.257208",
        "type": "function",
        "z": "ab6263c.69128a",
        "name": "Y34 parameters",
        "func": "msg.params = {\n    BASE_DEVICE_ID: 'welder',\n    ZONE: 'event',\n    CHANNEL_ID: 'Y34',\n    EVENT_ID: 'gyr_g_light',\n    INIT_VALUE: 0,\n    VALUE_TO_STATE : [\n        {\n            VALUE: 0,\n            STATE: 0\n        },\n        {\n            VALUE: 1,\n            STATE: 1\n        }\n    ]\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 440,
        "y": 420,
        "wires": [
            [
                "53887f9a.286c4"
            ]
        ]
    },
    {
        "id": "53887f9a.286c4",
        "type": "subflow:e967087c.382728",
        "z": "ab6263c.69128a",
        "name": "",
        "x": 630,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "5bb9e329.6b667c",
        "type": "function",
        "z": "ab6263c.69128a",
        "name": "Y37 parameters",
        "func": "msg.params = {\n    BASE_DEVICE_ID: 'welder',\n    ZONE: 'event',\n    CHANNEL_ID: 'Y37',\n    EVENT_ID: 'alarm_reset',\n    INIT_VALUE: 0,\n    VALUE_TO_STATE : [\n        {\n            VALUE: 0,\n            STATE: 0\n        },\n        {\n            VALUE: 1,\n            STATE: 1\n        }\n    ]\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 440,
        "y": 460,
        "wires": [
            [
                "bd1ea16a.a155"
            ]
        ]
    },
    {
        "id": "bd1ea16a.a155",
        "type": "subflow:e967087c.382728",
        "z": "ab6263c.69128a",
        "name": "",
        "x": 630,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "565e4362.9c866c",
        "type": "function",
        "z": "ab6263c.69128a",
        "name": "R401 parameters",
        "func": "msg.params = {\n    BASE_DEVICE_ID: 'welder',\n    ZONE: 'event',\n    CHANNEL_ID: 'R401',\n    EVENT_ID: 'part_no',\n    INIT_VALUE: 99, // For tag first data when power on\n    VALUE_TO_STATE : [\n        {\n            VALUE: 1,\n            STATE: 1\n        },\n        {\n            VALUE: 2,\n            STATE: 2\n        }\n    ]\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 450,
        "y": 100,
        "wires": [
            [
                "946fbc5.0391f4"
            ]
        ]
    },
    {
        "id": "946fbc5.0391f4",
        "type": "subflow:e967087c.382728",
        "z": "ab6263c.69128a",
        "name": "",
        "x": 630,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "18ccdc90.8fca63",
        "type": "function",
        "z": "c9bb0997.ce4998",
        "name": "X0 parameters",
        "func": "msg.params = {\n    BASE_DEVICE_ID: 'manual_bender',\n    ZONE: 'event',\n    CHANNEL_ID: 'X0',\n    EVENT_ID: 'emergency_stop',\n    INIT_VALUE: 0,\n    VALUE_TO_STATE : [\n        {\n            VALUE: 0,\n            STATE: 0\n        },\n        {\n            VALUE: 1,\n            STATE: 1\n        }\n    ]\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 520,
        "y": 220,
        "wires": [
            [
                "e23f31e7.87fda"
            ]
        ]
    },
    {
        "id": "e23f31e7.87fda",
        "type": "subflow:e967087c.382728",
        "z": "c9bb0997.ce4998",
        "name": "",
        "x": 690,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "253ae9c0.6db836",
        "type": "function",
        "z": "c9bb0997.ce4998",
        "name": "X1 parameters",
        "func": "msg.params = {\n    BASE_DEVICE_ID: 'manual_bender',\n    ZONE: 'event',\n    CHANNEL_ID: 'X1',\n    EVENT_ID: 'manual_auto',\n    INIT_VALUE: 0,\n    VALUE_TO_STATE : [\n        {\n            VALUE: 0,\n            STATE: 0\n        },\n        {\n            VALUE: 1,\n            STATE: 1\n        }\n    ]\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 520,
        "y": 260,
        "wires": [
            [
                "24c475c8.5ed7aa"
            ]
        ]
    },
    {
        "id": "24c475c8.5ed7aa",
        "type": "subflow:e967087c.382728",
        "z": "c9bb0997.ce4998",
        "name": "",
        "x": 690,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "1608c630.d6ac7a",
        "type": "function",
        "z": "c9bb0997.ce4998",
        "name": "X25 parameters",
        "func": "msg.params = {\n    BASE_DEVICE_ID: 'manual_bender',\n    ZONE: 'event',\n    CHANNEL_ID: 'X25',\n    EVENT_ID: 'oil_pressure_motor_alarm',\n    INIT_VALUE: 0,\n    VALUE_TO_STATE : [\n        {\n            VALUE: 0,\n            STATE: 0\n        },\n        {\n            VALUE: 1,\n            STATE: 1\n        }\n    ]\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 520,
        "y": 300,
        "wires": [
            [
                "38508416.000cac"
            ]
        ]
    },
    {
        "id": "38508416.000cac",
        "type": "subflow:e967087c.382728",
        "z": "c9bb0997.ce4998",
        "name": "",
        "x": 690,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "e1b7379f.fd0dc8",
        "type": "function",
        "z": "c9bb0997.ce4998",
        "name": "X26 parameters",
        "func": "msg.params = {\n    BASE_DEVICE_ID: 'manual_bender',\n    ZONE: 'event',\n    CHANNEL_ID: 'X26',\n    EVENT_ID: 'server_motor_alarm',\n    INIT_VALUE: 0,\n    VALUE_TO_STATE : [\n        {\n            VALUE: 0,\n            STATE: 0\n        },\n        {\n            VALUE: 1,\n            STATE: 1\n        }\n    ]\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 520,
        "y": 340,
        "wires": [
            [
                "20eca5f2.f608ba"
            ]
        ]
    },
    {
        "id": "20eca5f2.f608ba",
        "type": "subflow:e967087c.382728",
        "z": "c9bb0997.ce4998",
        "name": "",
        "x": 690,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "e1134c40.b069c",
        "type": "function",
        "z": "8c7bb3d1.2fe6f",
        "name": "Y0 parameters",
        "func": "msg.params = {\n    BASE_DEVICE_ID: 'manual_bender',\n    ZONE: 'working',\n    CHANNEL_ID: 'Y0',\n    EVENT_ID: 'Y0',\n    INIT_VALUE: 0,\n    VALUE_TO_STATE : [\n        {\n            VALUE: 0,\n            STATE: 0\n        },\n        {\n            VALUE: 1,\n            STATE: 1\n        }\n    ]\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 600,
        "y": 80,
        "wires": [
            [
                "27df988.0263e68"
            ]
        ]
    },
    {
        "id": "27df988.0263e68",
        "type": "subflow:e967087c.382728",
        "z": "8c7bb3d1.2fe6f",
        "name": "",
        "x": 770,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "737da920.b35cf8",
        "type": "function",
        "z": "8c7bb3d1.2fe6f",
        "name": "Y1 parameters",
        "func": "msg.params = {\n    BASE_DEVICE_ID: 'manual_bender',\n    ZONE: 'working',\n    CHANNEL_ID: 'Y1',\n    EVENT_ID: 'Y1',\n    INIT_VALUE: 0,\n    VALUE_TO_STATE : [\n        {\n            VALUE: 0,\n            STATE: 0\n        },\n        {\n            VALUE: 1,\n            STATE: 1\n        }\n    ]\n}\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 600,
        "y": 120,
        "wires": [
            [
                "56e98e50.7ce35"
            ]
        ]
    },
    {
        "id": "56e98e50.7ce35",
        "type": "subflow:e967087c.382728",
        "z": "8c7bb3d1.2fe6f",
        "name": "",
        "x": 770,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "81dc2349.0e51d",
        "type": "function",
        "z": "8c7bb3d1.2fe6f",
        "name": "Y2 parameters",
        "func": "msg.params = {\n    BASE_DEVICE_ID: 'manual_bender',\n    ZONE: 'working',\n    CHANNEL_ID: 'Y2',\n    EVENT_ID: 'Y2',\n    INIT_VALUE: 0,\n    VALUE_TO_STATE : [\n        {\n            VALUE: 0,\n            STATE: 0\n        },\n        {\n            VALUE: 1,\n            STATE: 1\n        }\n    ]\n}\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 600,
        "y": 160,
        "wires": [
            [
                "41ce5d2e.b568c4"
            ]
        ]
    },
    {
        "id": "41ce5d2e.b568c4",
        "type": "subflow:e967087c.382728",
        "z": "8c7bb3d1.2fe6f",
        "name": "",
        "x": 770,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "3ed032b4.705bae",
        "type": "function",
        "z": "8c7bb3d1.2fe6f",
        "name": "Y3 parameters",
        "func": "msg.params = {\n    BASE_DEVICE_ID: 'manual_bender',\n    ZONE: 'working',\n    CHANNEL_ID: 'Y3',\n    EVENT_ID: 'Y3',\n    INIT_VALUE: 0,\n    VALUE_TO_STATE : [\n        {\n            VALUE: 0,\n            STATE: 0\n        },\n        {\n            VALUE: 1,\n            STATE: 1\n        }\n    ]\n}\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 600,
        "y": 200,
        "wires": [
            [
                "699f0e04.7ebe5"
            ]
        ]
    },
    {
        "id": "699f0e04.7ebe5",
        "type": "subflow:e967087c.382728",
        "z": "8c7bb3d1.2fe6f",
        "name": "",
        "x": 770,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "25574ee5.0b5c82",
        "type": "function",
        "z": "8c7bb3d1.2fe6f",
        "name": "Y4 parameters",
        "func": "msg.params = {\n    BASE_DEVICE_ID: 'manual_bender',\n    ZONE: 'working',\n    CHANNEL_ID: 'Y4',\n    EVENT_ID: 'Y4',\n    INIT_VALUE: 0,\n    VALUE_TO_STATE : [\n        {\n            VALUE: 0,\n            STATE: 0\n        },\n        {\n            VALUE: 1,\n            STATE: 1\n        }\n    ]\n}\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 600,
        "y": 240,
        "wires": [
            [
                "1c669aa2.4191b5"
            ]
        ]
    },
    {
        "id": "1c669aa2.4191b5",
        "type": "subflow:e967087c.382728",
        "z": "8c7bb3d1.2fe6f",
        "name": "",
        "x": 770,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "4d4048e9.95c018",
        "type": "function",
        "z": "8c7bb3d1.2fe6f",
        "name": "Y5 parameters",
        "func": "msg.params = {\n    BASE_DEVICE_ID: 'manual_bender',\n    ZONE: 'working',\n    CHANNEL_ID: 'Y5',\n    EVENT_ID: 'Y5',\n    INIT_VALUE: 0,\n    VALUE_TO_STATE : [\n        {\n            VALUE: 0,\n            STATE: 0\n        },\n        {\n            VALUE: 1,\n            STATE: 1\n        }\n    ]\n}\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 600,
        "y": 280,
        "wires": [
            [
                "85d8fdaa.7635c"
            ]
        ]
    },
    {
        "id": "85d8fdaa.7635c",
        "type": "subflow:e967087c.382728",
        "z": "8c7bb3d1.2fe6f",
        "name": "",
        "x": 770,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "ad3d02cb.9e6ac",
        "type": "function",
        "z": "8c7bb3d1.2fe6f",
        "name": "Y6 parameters",
        "func": "msg.params = {\n    BASE_DEVICE_ID: 'manual_bender',\n    ZONE: 'working',\n    CHANNEL_ID: 'Y6',\n    EVENT_ID: 'Y6',\n    INIT_VALUE: 0,\n    VALUE_TO_STATE : [\n        {\n            VALUE: 0,\n            STATE: 0\n        },\n        {\n            VALUE: 1,\n            STATE: 1\n        }\n    ]\n}\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 600,
        "y": 320,
        "wires": [
            [
                "bbeb9126.6108a"
            ]
        ]
    },
    {
        "id": "bbeb9126.6108a",
        "type": "subflow:e967087c.382728",
        "z": "8c7bb3d1.2fe6f",
        "name": "",
        "x": 770,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "b1d6294e.4f8d98",
        "type": "function",
        "z": "8c7bb3d1.2fe6f",
        "name": "Y20 parameters",
        "func": "msg.params = {\n    BASE_DEVICE_ID: 'manual_bender',\n    ZONE: 'working',\n    CHANNEL_ID: 'Y20',\n    EVENT_ID: 'Y20',\n    INIT_VALUE: 0,\n    VALUE_TO_STATE : [\n        {\n            VALUE: 0,\n            STATE: 0\n        },\n        {\n            VALUE: 1,\n            STATE: 1\n        }\n    ]\n}\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 600,
        "y": 360,
        "wires": [
            [
                "98a86525.930888"
            ]
        ]
    },
    {
        "id": "98a86525.930888",
        "type": "subflow:e967087c.382728",
        "z": "8c7bb3d1.2fe6f",
        "name": "",
        "x": 770,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "8b120145.4da16",
        "type": "function",
        "z": "8c7bb3d1.2fe6f",
        "name": "Y21 parameters",
        "func": "msg.params = {\n    BASE_DEVICE_ID: 'manual_bender',\n    ZONE: 'working',\n    CHANNEL_ID: 'Y21',\n    EVENT_ID: 'Y21',\n    INIT_VALUE: 0,\n    VALUE_TO_STATE : [\n        {\n            VALUE: 0,\n            STATE: 0\n        },\n        {\n            VALUE: 1,\n            STATE: 1\n        }\n    ]\n}\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 600,
        "y": 400,
        "wires": [
            [
                "ec6a4bff.b3e278"
            ]
        ]
    },
    {
        "id": "ec6a4bff.b3e278",
        "type": "subflow:e967087c.382728",
        "z": "8c7bb3d1.2fe6f",
        "name": "",
        "x": 770,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "26d9c084.1c99b",
        "type": "function",
        "z": "8c7bb3d1.2fe6f",
        "name": "Y26 parameters",
        "func": "msg.params = {\n    BASE_DEVICE_ID: 'manual_bender',\n    ZONE: 'working',\n    CHANNEL_ID: 'Y26',\n    EVENT_ID: 'Y26',\n    INIT_VALUE: 0,\n    VALUE_TO_STATE : [\n        {\n            VALUE: 0,\n            STATE: 0\n        },\n        {\n            VALUE: 1,\n            STATE: 1\n        }\n    ]\n}\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 600,
        "y": 440,
        "wires": [
            [
                "afc382cb.31164"
            ]
        ]
    },
    {
        "id": "afc382cb.31164",
        "type": "subflow:e967087c.382728",
        "z": "8c7bb3d1.2fe6f",
        "name": "",
        "x": 770,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "94b4183b.c78988",
        "type": "function",
        "z": "8edceab3.f3fe58",
        "name": "X1 parameters",
        "func": "const MACHINE_ID = flow.get('MACHINE_ID')\nconst base_device_id = 'stamping_press_' + MACHINE_ID\n\nmsg.params = {\n    BASE_DEVICE_ID: base_device_id,\n    ZONE: 'event',\n    CHANNEL_ID: 'X1',\n    EVENT_ID: 'second_fall_detect',\n    INIT_VALUE: 0,\n    VALUE_TO_STATE : [\n        {\n            VALUE: 0,\n            STATE: 0\n        },\n        {\n            VALUE: 1,\n            STATE: 1\n        }\n    ]\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 480,
        "y": 120,
        "wires": [
            [
                "fc06ad8e.e64f1"
            ]
        ]
    },
    {
        "id": "fc06ad8e.e64f1",
        "type": "subflow:e967087c.382728",
        "z": "8edceab3.f3fe58",
        "name": "",
        "x": 650,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "3c9854a9.19129c",
        "type": "function",
        "z": "8edceab3.f3fe58",
        "name": "X2 parameters",
        "func": "const MACHINE_ID = flow.get('MACHINE_ID')\nconst base_device_id = 'stamping_press_' + MACHINE_ID\n\nmsg.params = {\n    BASE_DEVICE_ID: base_device_id,\n    ZONE: 'event',\n    CHANNEL_ID: 'X2',\n    EVENT_ID: 'safety_chain_detect',\n    INIT_VALUE: 0,\n    VALUE_TO_STATE : [\n        {\n            VALUE: 0,\n            STATE: 0\n        },\n        {\n            VALUE: 1,\n            STATE: 1\n        }\n    ]\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 480,
        "y": 160,
        "wires": [
            [
                "2fd335df.6b863a"
            ]
        ]
    },
    {
        "id": "2fd335df.6b863a",
        "type": "subflow:e967087c.382728",
        "z": "8edceab3.f3fe58",
        "name": "",
        "x": 650,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "d2d9c183.5278f",
        "type": "subflow:e967087c.382728",
        "z": "8edceab3.f3fe58",
        "name": "",
        "x": 650,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "eb494c2c.9c443",
        "type": "function",
        "z": "8edceab3.f3fe58",
        "name": "X3 parameters",
        "func": "const MACHINE_ID = flow.get('MACHINE_ID')\nconst base_device_id = 'stamping_press_' + MACHINE_ID\n\nmsg.params = {\n    BASE_DEVICE_ID: base_device_id,\n    ZONE: 'event',\n    CHANNEL_ID: 'X3',\n    EVENT_ID: 'overloading',\n    INIT_VALUE: 0,\n    VALUE_TO_STATE : [\n        {\n            VALUE: 0,\n            STATE: 0\n        },\n        {\n            VALUE: 1,\n            STATE: 1\n        }\n    ]\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 480,
        "y": 200,
        "wires": [
            [
                "d2d9c183.5278f"
            ]
        ]
    },
    {
        "id": "3f70400e.82326",
        "type": "function",
        "z": "8edceab3.f3fe58",
        "name": "X12 parameters",
        "func": "const MACHINE_ID = flow.get('MACHINE_ID')\nconst base_device_id = 'stamping_press_' + MACHINE_ID\n\nmsg.params = {\n    BASE_DEVICE_ID: base_device_id,\n    ZONE: 'event',\n    CHANNEL_ID: 'X12',\n    EVENT_ID: 'interlocking_stop_button',\n    INIT_VALUE: 0,\n    VALUE_TO_STATE : [\n        {\n            VALUE: 0,\n            STATE: 0\n        },\n        {\n            VALUE: 1,\n            STATE: 1\n        }\n    ]\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 480,
        "y": 240,
        "wires": [
            [
                "40ccb52a.aad97c"
            ]
        ]
    },
    {
        "id": "40ccb52a.aad97c",
        "type": "subflow:e967087c.382728",
        "z": "8edceab3.f3fe58",
        "name": "",
        "x": 650,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "320a649c.3b527c",
        "type": "function",
        "z": "8edceab3.f3fe58",
        "name": "X14 parameters",
        "func": "const MACHINE_ID = flow.get('MACHINE_ID')\nconst base_device_id = 'stamping_press_' + MACHINE_ID\n\nmsg.params = {\n    BASE_DEVICE_ID: base_device_id,\n    ZONE: 'event',\n    CHANNEL_ID: 'X14',\n    EVENT_ID: 'alarm_reset',\n    INIT_VALUE: 0,\n    VALUE_TO_STATE : [\n        {\n            VALUE: 0,\n            STATE: 0\n        },\n        {\n            VALUE: 1,\n            STATE: 1\n        }\n    ]\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 480,
        "y": 280,
        "wires": [
            [
                "4ea06e79.7e6cd"
            ]
        ]
    },
    {
        "id": "4ea06e79.7e6cd",
        "type": "subflow:e967087c.382728",
        "z": "8edceab3.f3fe58",
        "name": "",
        "x": 650,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "1baf8fb.1fddb7",
        "type": "function",
        "z": "8edceab3.f3fe58",
        "name": "X15 parameters",
        "func": "const MACHINE_ID = flow.get('MACHINE_ID')\nconst base_device_id = 'stamping_press_' + MACHINE_ID\n\nmsg.params = {\n    BASE_DEVICE_ID: base_device_id,\n    ZONE: 'event',\n    CHANNEL_ID: 'X15',\n    EVENT_ID: 'air_pressure_detect',\n    INIT_VALUE: 0,\n    VALUE_TO_STATE : [\n        {\n            VALUE: 0,\n            STATE: 0\n        },\n        {\n            VALUE: 1,\n            STATE: 1\n        }\n    ]\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 480,
        "y": 320,
        "wires": [
            [
                "c147271c.f9e4f8"
            ]
        ]
    },
    {
        "id": "c147271c.f9e4f8",
        "type": "subflow:e967087c.382728",
        "z": "8edceab3.f3fe58",
        "name": "",
        "x": 650,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "41806b03.ba28e4",
        "type": "function",
        "z": "8edceab3.f3fe58",
        "name": "X21 parameters",
        "func": "const MACHINE_ID = flow.get('MACHINE_ID')\nconst base_device_id = 'stamping_press_' + MACHINE_ID\n\nmsg.params = {\n    BASE_DEVICE_ID: base_device_id,\n    ZONE: 'event',\n    CHANNEL_ID: 'X21',\n    EVENT_ID: 'emergency_stop',\n    INIT_VALUE: 0,\n    VALUE_TO_STATE : [\n        {\n            VALUE: 0,\n            STATE: 0\n        },\n        {\n            VALUE: 1,\n            STATE: 1\n        }\n    ]\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 480,
        "y": 360,
        "wires": [
            [
                "ee2998dd.eeffc8"
            ]
        ]
    },
    {
        "id": "ee2998dd.eeffc8",
        "type": "subflow:e967087c.382728",
        "z": "8edceab3.f3fe58",
        "name": "",
        "x": 650,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "38de9b2f.b59f94",
        "type": "function",
        "z": "8edceab3.f3fe58",
        "name": "X25 parameters",
        "func": "const MACHINE_ID = flow.get('MACHINE_ID')\nconst base_device_id = 'stamping_press_' + MACHINE_ID\n\nmsg.params = {\n    BASE_DEVICE_ID: base_device_id,\n    ZONE: 'event',\n    CHANNEL_ID: 'X25',\n    EVENT_ID: 'lubricating_detect',\n    INIT_VALUE: 0,\n    VALUE_TO_STATE : [\n        {\n            VALUE: 0,\n            STATE: 0\n        },\n        {\n            VALUE: 1,\n            STATE: 1\n        }\n    ]\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 480,
        "y": 400,
        "wires": [
            [
                "262231e2.84908e"
            ]
        ]
    },
    {
        "id": "262231e2.84908e",
        "type": "subflow:e967087c.382728",
        "z": "8edceab3.f3fe58",
        "name": "",
        "x": 650,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "f3bfabda.925d18",
        "type": "function",
        "z": "8edceab3.f3fe58",
        "name": "X30 parameters",
        "func": "const MACHINE_ID = flow.get('MACHINE_ID')\nconst base_device_id = 'stamping_press_' + MACHINE_ID\n\nmsg.params = {\n    BASE_DEVICE_ID: base_device_id,\n    ZONE: 'event',\n    CHANNEL_ID: 'X30',\n    EVENT_ID: 'double_valve_detect',\n    INIT_VALUE: 0,\n    VALUE_TO_STATE : [\n        {\n            VALUE: 0,\n            STATE: 0\n        },\n        {\n            VALUE: 1,\n            STATE: 1\n        }\n    ]\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 480,
        "y": 440,
        "wires": [
            [
                "a94d60f9.f7d3"
            ]
        ]
    },
    {
        "id": "a94d60f9.f7d3",
        "type": "subflow:e967087c.382728",
        "z": "8edceab3.f3fe58",
        "name": "",
        "x": 650,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "44c1883d.221b08",
        "type": "function",
        "z": "8edceab3.f3fe58",
        "name": "X37 parameters",
        "func": "const MACHINE_ID = flow.get('MACHINE_ID')\nconst base_device_id = 'stamping_press_' + MACHINE_ID\n\nmsg.params = {\n    BASE_DEVICE_ID: base_device_id,\n    ZONE: 'event',\n    CHANNEL_ID: 'X37',\n    EVENT_ID: 'flywheel_brake_detect',\n    INIT_VALUE: 0,\n    VALUE_TO_STATE : [\n        {\n            VALUE: 0,\n            STATE: 0\n        },\n        {\n            VALUE: 1,\n            STATE: 1\n        }\n    ]\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 480,
        "y": 480,
        "wires": [
            [
                "e7995c8.db9e0a"
            ]
        ]
    },
    {
        "id": "e7995c8.db9e0a",
        "type": "subflow:e967087c.382728",
        "z": "8edceab3.f3fe58",
        "name": "",
        "x": 650,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "987c687.7674798",
        "type": "function",
        "z": "8edceab3.f3fe58",
        "name": "X62 parameters",
        "func": "const MACHINE_ID = flow.get('MACHINE_ID')\nconst base_device_id = 'stamping_press_' + MACHINE_ID\n\nmsg.params = {\n    BASE_DEVICE_ID: base_device_id,\n    ZONE: 'event',\n    CHANNEL_ID: 'X62',\n    EVENT_ID: 'interlocking_motor_alarm',\n    INIT_VALUE: 0,\n    VALUE_TO_STATE : [\n        {\n            VALUE: 0,\n            STATE: 0\n        },\n        {\n            VALUE: 1,\n            STATE: 1\n        }\n    ]\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 480,
        "y": 520,
        "wires": [
            [
                "51eef2ac.cf552c"
            ]
        ]
    },
    {
        "id": "51eef2ac.cf552c",
        "type": "subflow:e967087c.382728",
        "z": "8edceab3.f3fe58",
        "name": "",
        "x": 650,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "3b9998c8.a567f8",
        "type": "function",
        "z": "8edceab3.f3fe58",
        "name": "X65 parameters",
        "func": "const MACHINE_ID = flow.get('MACHINE_ID')\nconst base_device_id = 'stamping_press_' + MACHINE_ID\n\nmsg.params = {\n    BASE_DEVICE_ID: base_device_id,\n    ZONE: 'event',\n    CHANNEL_ID: 'X65',\n    EVENT_ID: 'engine_oil_interlocking_detect',\n    INIT_VALUE: 0,\n    VALUE_TO_STATE : [\n        {\n            VALUE: 0,\n            STATE: 0\n        },\n        {\n            VALUE: 1,\n            STATE: 1\n        }\n    ]\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 480,
        "y": 560,
        "wires": [
            [
                "f6a69939.ace628"
            ]
        ]
    },
    {
        "id": "f6a69939.ace628",
        "type": "subflow:e967087c.382728",
        "z": "8edceab3.f3fe58",
        "name": "",
        "x": 650,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "2ea8a5c8.00dc8a",
        "type": "function",
        "z": "8edceab3.f3fe58",
        "name": "Y4 parameters",
        "func": "const MACHINE_ID = flow.get('MACHINE_ID')\nconst base_device_id = 'stamping_press_' + MACHINE_ID\n\nmsg.params = {\n    BASE_DEVICE_ID: base_device_id,\n    ZONE: 'event',\n    CHANNEL_ID: 'Y4',\n    EVENT_ID: 'alarm_light',\n    INIT_VALUE: 0,\n    VALUE_TO_STATE : [\n        {\n            VALUE: 0,\n            STATE: 0\n        },\n        {\n            VALUE: 1,\n            STATE: 1\n        }\n    ]\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 480,
        "y": 600,
        "wires": [
            [
                "c29e3c35.5e3b4"
            ]
        ]
    },
    {
        "id": "c29e3c35.5e3b4",
        "type": "subflow:e967087c.382728",
        "z": "8edceab3.f3fe58",
        "name": "",
        "x": 650,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "d6407075.16fee",
        "type": "debug",
        "z": "762d9b07.9b23d4",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "working_code_list",
        "targetType": "msg",
        "x": 800,
        "y": 240,
        "wires": []
    },
    {
        "id": "c4ff7da0.7d77f",
        "type": "debug",
        "z": "762d9b07.9b23d4",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 770,
        "y": 200,
        "wires": []
    },
    {
        "id": "dcec619c.c9dde",
        "type": "function",
        "z": "8edceab3.f3fe58",
        "name": "flow.params",
        "func": "if (typeof msg.params.MACHINE_ID === 'undefined') {\n    node.error('illegal msg.params')\n    return\n}\n\nflow.set(\n    [\n        'MACHINE_ID'\n    ],\n    [\n        msg.params.MACHINE_ID\n    ]\n)\n\ndelete msg.params\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 210,
        "y": 320,
        "wires": [
            [
                "94b4183b.c78988",
                "3c9854a9.19129c",
                "eb494c2c.9c443",
                "3f70400e.82326",
                "320a649c.3b527c",
                "1baf8fb.1fddb7",
                "41806b03.ba28e4",
                "38de9b2f.b59f94",
                "f3bfabda.925d18",
                "44c1883d.221b08",
                "987c687.7674798",
                "3b9998c8.a567f8",
                "2ea8a5c8.00dc8a"
            ]
        ]
    },
    {
        "id": "4c2423a.9de22dc",
        "type": "function",
        "z": "89e3dd2d.48591",
        "name": "flow.params",
        "func": "if (typeof msg.params.BASE_DEVICE_ID === 'undefined' ||\n        typeof msg.params.LAST_WORKING_STOP_AT === 'undefined' ||\n        typeof msg.params.CIRCLE_PRE_COUNT === 'undefined') {\n    node.error('illegal msg.params')\n    return\n}\n\nflow.set(\n    [\n        'BASE_DEVICE_ID',\n        'LAST_WORKING_STOP_AT',\n        'CIRCLE_PRE_COUNT'\n    ],\n    [\n        msg.params.BASE_DEVICE_ID,\n        msg.params.LAST_WORKING_STOP_AT,\n        msg.params.CIRCLE_PRE_COUNT\n    ]\n)\n\ndelete msg.params\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 390,
        "y": 100,
        "wires": [
            [
                "16a18095.6550bf"
            ]
        ]
    },
    {
        "id": "cef99c2d.e0ad9",
        "type": "qi-interval-boundary",
        "z": "89e3dd2d.48591",
        "name": "",
        "timezone": "local",
        "intervalDuration": "86400",
        "shiftInterval": "0",
        "x": 410,
        "y": 180,
        "wires": [
            [
                "aadc782.224ba88"
            ]
        ]
    },
    {
        "id": "aadc782.224ba88",
        "type": "function",
        "z": "89e3dd2d.48591",
        "name": "query count",
        "func": "const from = flow.get('BASE_DEVICE_ID') + '_event'\nconst since = msg.payload.begin.toISOString()\nconst until = msg.payload.end.toISOString()\n\nmsg.query = `\n    SELECT COUNT(\"working\")\n    FROM ${from}\n    WHERE working = 0 AND\n        time >= '${since}' AND\n        time <= '${until}'\n`\n\n// node.error(msg.query)\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 410,
        "y": 220,
        "wires": [
            [
                "6a3e4f5d.6aaf6"
            ]
        ]
    },
    {
        "id": "6a3e4f5d.6aaf6",
        "type": "qi-query-history",
        "z": "89e3dd2d.48591",
        "name": "",
        "query": "",
        "x": 400,
        "y": 260,
        "wires": [
            [
                "36a218ad.2c9e28"
            ]
        ]
    },
    {
        "id": "36a218ad.2c9e28",
        "type": "function",
        "z": "89e3dd2d.48591",
        "name": "count",
        "func": "const device_id = flow.get('BASE_DEVICE_ID') + '_production_info'\nconst LAST_WORKING_STOP_AT = flow.get('LAST_WORKING_STOP_AT')\nconst CIRCLE_PRE_COUNT = flow.get('CIRCLE_PRE_COUNT')\nconst count = msg.payload[0].count / CIRCLE_PRE_COUNT\n\nif (!Number.isInteger(count))\n{\n    return\n}\n\nmsg.payload = {\n    \"deviceId\": device_id,\n    \"at\": LAST_WORKING_STOP_AT,\n    \"channels\": {\n        \"count\": count\n    }\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 390,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "16a18095.6550bf",
        "type": "function",
        "z": "89e3dd2d.48591",
        "name": "at to date",
        "func": "const LAST_WORKING_STOP_AT = flow.get('LAST_WORKING_STOP_AT')\nconst date = new Date(\n    LAST_WORKING_STOP_AT.sec * 1000 + Math.floor(LAST_WORKING_STOP_AT.us / 1000))\n\nmsg.payload = date\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 380,
        "y": 140,
        "wires": [
            [
                "cef99c2d.e0ad9"
            ]
        ]
    },
    {
        "id": "3b2fae37.1d1c62",
        "type": "qi-interval-boundary",
        "z": "22034728.b8ab18",
        "name": "",
        "timezone": "local",
        "intervalDuration": "86400",
        "shiftInterval": "0",
        "x": 390,
        "y": 200,
        "wires": [
            [
                "1327c87e.40b858"
            ]
        ]
    },
    {
        "id": "1327c87e.40b858",
        "type": "function",
        "z": "22034728.b8ab18",
        "name": "query working state",
        "func": "const from = flow.get('BASE_DEVICE_ID') + '_event'\nconst since = msg.payload.begin.toISOString()\nconst until = msg.payload.end.toISOString()\n\nmsg.query = `\n    SELECT working\n    FROM ${from}\n    WHERE time >= '${since}' AND\n        time <= '${until}'\n`\n\n// node.error(msg.query)\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 410,
        "y": 240,
        "wires": [
            [
                "fb0a0fa6.09f1c"
            ]
        ]
    },
    {
        "id": "fb0a0fa6.09f1c",
        "type": "qi-query-history",
        "z": "22034728.b8ab18",
        "name": "",
        "query": "",
        "x": 380,
        "y": 280,
        "wires": [
            [
                "7fcbc330.4d15ec"
            ]
        ]
    },
    {
        "id": "7fcbc330.4d15ec",
        "type": "qi-state-duration",
        "z": "22034728.b8ab18",
        "name": "",
        "stateName": "working",
        "x": 380,
        "y": 320,
        "wires": [
            [
                "96e1de54.5586b"
            ]
        ]
    },
    {
        "id": "8a4e061d.94c3c8",
        "type": "function",
        "z": "22034728.b8ab18",
        "name": "flow.params",
        "func": "if (typeof msg.params.BASE_DEVICE_ID === 'undefined' ||\n        typeof msg.params.LAST_WORKING_STOP_AT === 'undefined') {\n    node.error('illegal msg.params')\n    return\n}\n\nflow.set(\n    [\n        'BASE_DEVICE_ID',\n        'LAST_WORKING_STOP_AT'\n    ],\n    [\n        msg.params.BASE_DEVICE_ID,\n        msg.params.LAST_WORKING_STOP_AT\n    ]\n)\n\ndelete msg.params\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 370,
        "y": 120,
        "wires": [
            [
                "3559b382.82beec"
            ]
        ]
    },
    {
        "id": "3559b382.82beec",
        "type": "function",
        "z": "22034728.b8ab18",
        "name": "at to date",
        "func": "const LAST_WORKING_STOP_AT = flow.get('LAST_WORKING_STOP_AT')\nconst date = new Date(\n    LAST_WORKING_STOP_AT.sec * 1000 + Math.floor(LAST_WORKING_STOP_AT.us / 1000))\n\nmsg.payload = date\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 360,
        "y": 160,
        "wires": [
            [
                "3b2fae37.1d1c62"
            ]
        ]
    },
    {
        "id": "96e1de54.5586b",
        "type": "function",
        "z": "22034728.b8ab18",
        "name": "utilization",
        "func": "const device_id = flow.get('BASE_DEVICE_ID') + '_production_info'\nconst LAST_WORKING_STOP_AT = flow.get('LAST_WORKING_STOP_AT')\nconst db_payload = msg.payload\n\nlet duration = 0\ndb_payload.forEach(\n    function(item)\n    {\n        if (item.state == 1)\n        {\n            duration = item.duration\n        }\n    }\n)\n\nconst utilization_sec = Math.floor(duration / 1000)\n\nmsg.payload = {\n    \"deviceId\": device_id,\n    \"at\": LAST_WORKING_STOP_AT,\n    \"channels\": {\n        \"utilization_sec\": utilization_sec\n    }\n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 360,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "e691b09f.a0177",
        "type": "function",
        "z": "d0be88d0.4b1d78",
        "name": "validate count",
        "func": "const CHANNEL_ID = flow.get('CHANNEL_ID')\nconst LAST_COUNT_CHANGED_AT = flow.get('LAST_COUNT_CHANGED_AT')\n\nconst count = msg.payload.channels[CHANNEL_ID]\nconst date = new Date(\n    LAST_COUNT_CHANGED_AT.sec * 1000 + Math.floor(LAST_COUNT_CHANGED_AT.us / 1000))\n\nif (count === 0)\n{\n    return\n}\n\nmsg.payload = date\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 540,
        "y": 100,
        "wires": [
            [
                "650e3565.ba641c"
            ]
        ]
    },
    {
        "id": "650e3565.ba641c",
        "type": "qi-interval-boundary",
        "z": "d0be88d0.4b1d78",
        "name": "",
        "timezone": "local",
        "intervalDuration": "86400",
        "shiftInterval": "0",
        "x": 570,
        "y": 140,
        "wires": [
            [
                "9b972430.762908"
            ]
        ]
    },
    {
        "id": "9b972430.762908",
        "type": "function",
        "z": "d0be88d0.4b1d78",
        "name": "query production info last count",
        "func": "const from = flow.get('BASE_DEVICE_ID') + '_production_info'\nconst since = msg.payload.begin.toISOString()\nconst until = msg.payload.end.toISOString()\n\nmsg.query = `\n    SELECT \n        LAST(count)\n    FROM \n        ${from}\n    WHERE \n        time >= '${since}' AND\n        time <= '${until}'\n`\n\n// node.error(msg.query)\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 590,
        "y": 180,
        "wires": [
            [
                "d1455c5f.e71f6"
            ]
        ]
    },
    {
        "id": "d1455c5f.e71f6",
        "type": "qi-query-history",
        "z": "d0be88d0.4b1d78",
        "name": "",
        "query": "",
        "x": 560,
        "y": 220,
        "wires": [
            [
                "72e96871.038118"
            ]
        ]
    },
    {
        "id": "72e96871.038118",
        "type": "function",
        "z": "d0be88d0.4b1d78",
        "name": "count",
        "func": "const LAST_COUNT_CHANGED_AT = flow.get('LAST_COUNT_CHANGED_AT')\n\nconst payload = msg.payload\nconst device_id = flow.get('BASE_DEVICE_ID') + '_production_info'\n\nlet count = 1\nif (payload.length > 0)\n{\n    count = payload[0].last + 1\n}\n\nmsg.payload = {\n    \"deviceId\": device_id,\n    \"at\": LAST_COUNT_CHANGED_AT,\n    \"channels\": {\n        \"count\": count\n    }\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 510,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "effeb698.b5a838",
        "type": "function",
        "z": "d0be88d0.4b1d78",
        "name": "flow.params",
        "func": "if (typeof msg.params.BASE_DEVICE_ID === 'undefined' ||\n        typeof msg.params.CHANNEL_ID === 'undefined' ||\n        typeof msg.params.LAST_COUNT_CHANGED_AT === 'undefined') {\n    node.error('illegal msg.params')\n    return\n}\n\nflow.set(\n    [\n        'BASE_DEVICE_ID',\n        'CHANNEL_ID',\n        'LAST_COUNT_CHANGED_AT'\n    ],\n    [\n        msg.params.BASE_DEVICE_ID,\n        msg.params.CHANNEL_ID,\n        msg.params.LAST_COUNT_CHANGED_AT\n    ]\n)\n\ndelete msg.params\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 530,
        "y": 60,
        "wires": [
            [
                "e691b09f.a0177"
            ]
        ]
    },
    {
        "id": "278cc5bc.269f8a",
        "type": "subflow:b21e5ed3.f60f7",
        "z": "abf4d1c6.97531",
        "name": "",
        "env": [
            {
                "name": "device_id",
                "type": "str",
                "value": "fx5u_event"
            }
        ],
        "x": 450,
        "y": 140,
        "wires": [
            [
                "d0d39dd7.5ec8b"
            ]
        ]
    },
    {
        "id": "4f4e6571.e8d1cc",
        "type": "qi-forward-on-change",
        "z": "b21e5ed3.f60f7",
        "name": "",
        "initialValue": "{}",
        "initialValueType": "json",
        "useInitialValue": false,
        "x": 780,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "3652935d.b3ff7c",
        "type": "function",
        "z": "ab40f84.3a06e08",
        "name": "on",
        "func": "const DEVICE_ID = env.get(\"device_id\")\nconst power_on_id = env.get(\"power_on_id\")\n\nvar at = msg.payload.at\n\nmsg.payload = {\n    \"deviceId\": DEVICE_ID,\n    \"at\": at,\n    \"channels\": {}\n}\n\nmsg.payload.channels[power_on_id] = 1\n\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "x": 470,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "5b985143.5ec65",
        "type": "function",
        "z": "ab40f84.3a06e08",
        "name": "validate env variable",
        "func": "const ENV = [\n    \"device_id\"\n]\n\nfor (var item in ENV)\n{\n    const v = env.get(ENV[item])\n    if (v === '' || v === undefined)\n    {\n        node.error(ENV[item] + \" env variable not set\")\n        return\n    }\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 260,
        "y": 120,
        "wires": [
            [
                "3652935d.b3ff7c",
                "9a6c43ef.b301c"
            ]
        ]
    },
    {
        "id": "9a6c43ef.b301c",
        "type": "trigger",
        "z": "ab40f84.3a06e08",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "20",
        "extend": true,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "name": "",
        "x": 230,
        "y": 160,
        "wires": [
            [
                "c495fe0a.fe82f"
            ]
        ]
    },
    {
        "id": "c495fe0a.fe82f",
        "type": "function",
        "z": "ab40f84.3a06e08",
        "name": "off",
        "func": "const DEVICE_ID = env.get(\"device_id\")\nconst power_on_id = env.get(\"power_on_id\")\n\nvar at = msg.payload.at\n\nmsg.payload = {\n    \"deviceId\": DEVICE_ID,\n    \"at\": at,\n    \"channels\": {}\n}\n\nmsg.payload.channels[power_on_id] = 0\n\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "x": 470,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "9371be04.a3b22",
        "type": "function",
        "z": "2aa655a1.c3766a",
        "name": "init args",
        "func": "msg.args = {}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 220,
        "y": 60,
        "wires": [
            [
                "22033370.5b557c"
            ]
        ]
    },
    {
        "id": "22033370.5b557c",
        "type": "function",
        "z": "2aa655a1.c3766a",
        "name": "save trigger time",
        "func": "msg.args.trigger_time = new Date(msg.payload)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 240,
        "y": 100,
        "wires": [
            [
                "e99bb8b1.e93f18"
            ]
        ]
    },
    {
        "id": "e99bb8b1.e93f18",
        "type": "qi-interval-boundary",
        "z": "2aa655a1.c3766a",
        "name": "",
        "timezone": "local",
        "intervalDuration": "86400",
        "shiftInterval": "0",
        "x": 250,
        "y": 140,
        "wires": [
            [
                "d8945226.40e3c"
            ]
        ]
    },
    {
        "id": "d8945226.40e3c",
        "type": "function",
        "z": "2aa655a1.c3766a",
        "name": "save untiliztion being/end time",
        "func": "msg.args.utilization_begin_time = msg.payload.begin\nmsg.args.utilization_end_time = msg.payload.end\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 290,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "707be083.77a96",
        "type": "function",
        "z": "234039dd.2e06c6",
        "name": "query changed",
        "func": "const begin_time = msg.args.utilization_begin_time\nconst end_time = msg.args.utilization_end_time\n\nconst device_id = env.get(\"device_id\")\nconst channel_id = env.get(\"channel_id\")\n\nmsg.query = `\n    SELECT \"${channel_id}\"\n    FROM \"${device_id}\"\n    WHERE time >= '${begin_time.toISOString()}'\n    AND time < '${end_time.toISOString()}'\n`\n\nnode.log(msg.query)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 140,
        "y": 140,
        "wires": [
            [
                "71fb07b2.b7c7e8"
            ]
        ]
    },
    {
        "id": "71fb07b2.b7c7e8",
        "type": "qi-query-history",
        "z": "234039dd.2e06c6",
        "name": "",
        "query": "",
        "x": 340,
        "y": 140,
        "wires": [
            [
                "f9bb4ff0.7d94e"
            ]
        ]
    },
    {
        "id": "f9bb4ff0.7d94e",
        "type": "function",
        "z": "234039dd.2e06c6",
        "name": "save changed_list",
        "func": "msg.args.changed_list = msg.payload\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 150,
        "y": 180,
        "wires": [
            [
                "6f56fbce.be9824"
            ]
        ]
    },
    {
        "id": "6f56fbce.be9824",
        "type": "function",
        "z": "234039dd.2e06c6",
        "name": "query previous state",
        "func": "const begin_time = msg.args.utilization_begin_time\n\nconst device_id = env.get(\"device_id\")\nconst channel_id = env.get(\"channel_id\")\n\nmsg.query = `\n    SELECT \"${channel_id}\"\n    FROM \"${device_id}\"\n    WHERE time < '${begin_time.toISOString()}'\n    ORDER BY time DESC\n    LIMIT 1\n`\n\nnode.log(msg.query)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 160,
        "y": 260,
        "wires": [
            [
                "2af26b79.1435e4"
            ]
        ]
    },
    {
        "id": "2af26b79.1435e4",
        "type": "qi-query-history",
        "z": "234039dd.2e06c6",
        "name": "",
        "query": "",
        "x": 380,
        "y": 260,
        "wires": [
            [
                "c71b8705.b74f48"
            ]
        ]
    },
    {
        "id": "c71b8705.b74f48",
        "type": "function",
        "z": "234039dd.2e06c6",
        "name": "append previous state",
        "func": "const pre_state_list = msg.payload\nchanged_list = msg.args.changed_list\n\nif (pre_state_list.length !== 0)\n{\n    changed_list.unshift(pre_state_list[0])\n}\n\nmsg.payload = changed_list\nmsg.changed_list = undefined\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 160,
        "y": 300,
        "wires": [
            [
                "68a7a50b.33d7bc"
            ]
        ]
    },
    {
        "id": "68a7a50b.33d7bc",
        "type": "function",
        "z": "234039dd.2e06c6",
        "name": "remove duplicated state",
        "func": "const changed_list = msg.payload\nconst channel_id = env.get(\"channel_id\")\n\nlet rtn_changed = []\nlet now_state = undefined\n\nchanged_list.forEach(function(item){\n    if (item[channel_id] !== now_state)\n    {\n        rtn_changed.push(item)\n        now_state = item[channel_id]\n    }\n})\n\nmsg.payload = rtn_changed\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 170,
        "y": 360,
        "wires": [
            [
                "861f950.b2b7068"
            ]
        ]
    },
    {
        "id": "861f950.b2b7068",
        "type": "function",
        "z": "234039dd.2e06c6",
        "name": "add lead/production time",
        "func": "const channel_id = env.get(\"channel_id\")\nconst pretreatment_sec = env.get(\"pretreatment_sec\")\nconst post_processing_sec = env.get(\"post_processing_sec\")\nmsg.utilization_id = env.get(\"utilization_id\")\n\nconst trigger_time = msg.args.trigger_time\nconst changed_list = msg.payload\n\nlet rtn_changed_list = []\nfor (let ax = 0; ax < changed_list.length; ++ax)\n{\n    let item = changed_list[ax]\n    if (item[channel_id] === 1)\n    {\n        let with_lead_time = new Date(item.time - pretreatment_sec * 1000)\n        let pre_stop_item = rtn_changed_list[ax - 1]\n\n        if (pre_stop_item !== undefined &&\n            pre_stop_item.time >= with_lead_time)\n        {\n            rtn_changed_list.pop()\n            continue;\n        }\n\n        rtn_changed_list.push({\n            \"time\": with_lead_time,\n            \"changed\": item[channel_id]\n        })\n    }\n    else if (item[channel_id] === 0)\n    {\n        let with_production_time = item.time\n        with_production_time.setSeconds(\n            with_production_time.getSeconds() + post_processing_sec)\n\n        rtn_changed_list.push({\n            \"time\": with_production_time,\n            \"changed\": item[channel_id]\n        })\n    }\n}\n\nif (rtn_changed_list.length !== 0 &&\n    rtn_changed_list.slice(-1)[0].time > trigger_time)\n{\n    let latest = rtn_changed_list.pop()\n\n    rtn_changed_list.push({\n        \"time\": new Date(trigger_time - 1),\n        \"changed\": latest['changed']\n    })\n}\n\nmsg.payload = rtn_changed_list\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 170,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "fc566939.23b3c8",
        "type": "function",
        "z": "234039dd.2e06c6",
        "name": "variable validation",
        "func": "const ENV = [\n    \"device_id\",\n    \"channel_id\",\n    \"pretreatment_sec\",\n    \"post_processing_sec\",\n    \"utilization_id\"\n]\n\nconst ARGS = [\n    \"utilization_begin_time\",\n    \"utilization_end_time\",\n    \"trigger_time\"\n]\n\nfor (let item in ENV)\n{\n    const v = env.get(ENV[item])\n    if (v === '' || v === undefined)\n    {\n        node.error(ENV[item] + \" env variable not set\")\n        return\n    }\n}\n\nfor (let item in ARGS)\n{\n    const v = msg.args[ARGS[item]]\n    if (v === undefined)\n    {\n        node.error(ARGS[item] + \" not set in msg.args\")\n        return\n    }\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 250,
        "y": 60,
        "wires": [
            [
                "707be083.77a96"
            ]
        ]
    },
    {
        "id": "cd5dba73.074288",
        "type": "inject",
        "z": "97a60c8f.aa291",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "10",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 150,
        "y": 60,
        "wires": [
            [
                "15c77c71.d79004"
            ]
        ]
    },
    {
        "id": "5e81d6df.b5b868",
        "type": "subflow:234039dd.2e06c6",
        "z": "97a60c8f.aa291",
        "name": "",
        "env": [
            {
                "name": "device_id",
                "type": "str",
                "value": "work_time"
            },
            {
                "name": "channel_id",
                "type": "str",
                "value": "count_event"
            },
            {
                "name": "post_processing_sec",
                "type": "num",
                "value": "1"
            },
            {
                "name": "utilization_id",
                "type": "str",
                "value": "fx5u_utilization"
            }
        ],
        "x": 180,
        "y": 140,
        "wires": [
            [
                "5b224792.a1a338"
            ]
        ]
    },
    {
        "id": "5b224792.a1a338",
        "type": "function",
        "z": "97a60c8f.aa291",
        "name": "append since/until",
        "func": "const changed_list = msg.payload\nconst utilization_begin_time = msg.args.utilization_begin_time\nconst trigger_time = msg.args.trigger_time\n\nif (changed_list.length === 0)\n{\n    return\n}\n\nmsg.since = utilization_begin_time\nmsg.until = trigger_time\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 170,
        "y": 180,
        "wires": [
            [
                "769386e6.e99748"
            ]
        ]
    },
    {
        "id": "769386e6.e99748",
        "type": "qi-state-duration",
        "z": "97a60c8f.aa291",
        "name": "",
        "stateName": "changed",
        "x": 160,
        "y": 220,
        "wires": [
            [
                "5d6ad47d.1ed3ac"
            ]
        ]
    },
    {
        "id": "15c77c71.d79004",
        "type": "subflow:2aa655a1.c3766a",
        "z": "97a60c8f.aa291",
        "name": "",
        "env": [],
        "x": 170,
        "y": 100,
        "wires": [
            [
                "5e81d6df.b5b868"
            ]
        ]
    },
    {
        "id": "5d6ad47d.1ed3ac",
        "type": "function",
        "z": "97a60c8f.aa291",
        "name": "build reading",
        "func": "const trigger_timestamp = msg.args.trigger_time.getTime()\nconst state_duration_list = msg.payload\nlet utilization_channel_id = msg.utilization_id\n\nlet today_utilization_seconds = 0\nstate_duration_list.forEach(function (item){\n    if (item.state === 1)\n    {\n        today_utilization_seconds = Math.floor(item.duration / 1000);\n    }\n})\n\nmsg.payload = {\n    \"deviceId\": \"work_time\",\n    \"at\": {\n        \"sec\": Math.floor(trigger_timestamp / 1000),\n        \"us\": 0\n    },\n    \"channels\": {}\n}\n\nmsg.payload.channels[utilization_channel_id] = parseFloat((today_utilization_seconds / 3600).toFixed(2))\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 150,
        "y": 260,
        "wires": [
            [
                "cbbe3106.5bbc6"
            ]
        ]
    },
    {
        "id": "cbbe3106.5bbc6",
        "type": "qi-chameleon-sink",
        "z": "97a60c8f.aa291",
        "name": "",
        "x": 360,
        "y": 260,
        "wires": []
    },
    {
        "id": "7b354a8e.315d74",
        "type": "function",
        "z": "81fd677e.0a3c88",
        "name": "query count event",
        "func": "const begin_time = msg.begin_time\nconst end_time = msg.end_time\nconst device_id = env.get(\"device_id\")\nconst channel_id = env.get(\"query_channel_id\")\n\nmsg.query = `\n    SELECT sum(${channel_id}) as ${channel_id}\n    FROM ${device_id}\n    WHERE time >= '${begin_time.toISOString()}'\n    AND time < '${end_time.toISOString()}'\n`\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 270,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "f9e38b7d.692168",
        "type": "qi-interval-boundary",
        "z": "81fd677e.0a3c88",
        "name": "",
        "timezone": "local",
        "intervalDuration": "86400",
        "shiftInterval": "0",
        "x": 270,
        "y": 200,
        "wires": [
            [
                "57f513aa.ef30fc"
            ]
        ]
    },
    {
        "id": "57f513aa.ef30fc",
        "type": "function",
        "z": "81fd677e.0a3c88",
        "name": "save begin/end time",
        "func": "const begin = msg.payload.begin\nconst end = msg.payload.end\n\nmsg.begin_time = begin\nmsg.end_time = end\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 280,
        "y": 240,
        "wires": [
            [
                "7b354a8e.315d74"
            ]
        ]
    },
    {
        "id": "fcf6cea5.c30c",
        "type": "function",
        "z": "81fd677e.0a3c88",
        "name": "save trigger time",
        "func": "msg.args.trigger_time = new Date(msg.payload)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 260,
        "y": 160,
        "wires": [
            [
                "f9e38b7d.692168"
            ]
        ]
    },
    {
        "id": "7de6f5a.b3f160c",
        "type": "function",
        "z": "81fd677e.0a3c88",
        "name": "validate env variable",
        "func": "const ENV = [\n    \"device_id\",\n    \"query_channel_id\"\n]\n\nfor (var item in ENV)\n{\n    const v = env.get(ENV[item])\n    if (v === '' || v === undefined)\n    {\n        node.error(ENV[item] + \" env variable not set\")\n        return\n    }\n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 280,
        "y": 80,
        "wires": [
            [
                "4453ed7f.b20e34"
            ]
        ]
    },
    {
        "id": "4453ed7f.b20e34",
        "type": "function",
        "z": "81fd677e.0a3c88",
        "name": "init args",
        "func": "msg.args = {}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 240,
        "y": 120,
        "wires": [
            [
                "fcf6cea5.c30c"
            ]
        ]
    },
    {
        "id": "3ce15f45.2322d",
        "type": "qi-chameleon-source",
        "z": "3f489316.51490c",
        "name": "",
        "deviceId": "fx5u-100m",
        "x": 210,
        "y": 80,
        "wires": [
            [
                "49b9c7da.2bf848"
            ]
        ]
    },
    {
        "id": "99e21337.34f63",
        "type": "qi-chameleon-sink",
        "z": "3f489316.51490c",
        "name": "",
        "x": 720,
        "y": 180,
        "wires": []
    },
    {
        "id": "49b9c7da.2bf848",
        "type": "qi-forward-on-match",
        "z": "3f489316.51490c",
        "name": "",
        "schema": "{\"$schema\":\"http://json-schema.org/draft-07/schema#\",\"type\":\"object\",\"required\":[\"deviceId\",\"at\",\"channels\"],\"properties\":{\"deviceId\":{\"type\":\"string\"},\"at\":{\"type\":\"object\",\"required\":[\"sec\",\"us\"],\"properties\":{\"sec\":{\"type\":\"integer\",\"minimum\":0},\"us\":{\"type\":\"integer\",\"minimum\":0,\"maximum\":999999}}},\"channels\":{\"type\":\"object\",\"required\":[\"C04\"],\"properties\":{\"C04\":{\"type\":\"integer\"}}}}}",
        "schemaType": "json",
        "removeAdditional": true,
        "x": 140,
        "y": 140,
        "wires": [
            [
                "519e4504.3a555c"
            ]
        ]
    },
    {
        "id": "519e4504.3a555c",
        "type": "qi-forward-on-change",
        "z": "3f489316.51490c",
        "name": "",
        "initialValue": "{}",
        "initialValueType": "json",
        "useInitialValue": false,
        "x": 150,
        "y": 180,
        "wires": [
            [
                "e2b191f5.498cc",
                "d8727067.2fa32",
                "a6ba0795.21e098"
            ]
        ]
    },
    {
        "id": "e2b191f5.498cc",
        "type": "function",
        "z": "3f489316.51490c",
        "name": "count_event",
        "func": "const at = msg.payload.at\n\nmsg.payload = {\n    \"deviceId\": \"work_time\",\n    \"at\": at,\n    \"channels\": {\n        \"count_event\": 1\n    }\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 510,
        "y": 180,
        "wires": [
            [
                "99e21337.34f63"
            ]
        ]
    },
    {
        "id": "18898ac9.f39755",
        "type": "qi-interval-boundary",
        "z": "41d5e1f9.f8d97",
        "name": "",
        "timezone": "local",
        "intervalDuration": "86400",
        "shiftInterval": "0",
        "x": 270,
        "y": 220,
        "wires": [
            [
                "d6a9fd47.9072f"
            ]
        ]
    },
    {
        "id": "6d93c360.fd3f8c",
        "type": "function",
        "z": "41d5e1f9.f8d97",
        "name": "build query string",
        "func": "const begin_time = msg.begin_time\nconst end_time = msg.end_time\nconst device_id = env.get(\"device_id\")\nconst channel_id = env.get(\"query_channel_id\")\nmsg.channel_id = env.get(\"query_channel_id\")\nmsg.power_on_channel_id = env.get(\"power_on_channel_id\")\nmsg.power_off_channel_id = env.get(\"power_off_channel_id\")\n\nmsg.query = `\n    SELECT ${channel_id}\n    FROM ${device_id}\n    WHERE time >= '${begin_time.toISOString()}'\n    AND time < '${end_time.toISOString()}'\n`\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 270,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "d6a9fd47.9072f",
        "type": "function",
        "z": "41d5e1f9.f8d97",
        "name": "save begin/end time",
        "func": "const begin = msg.payload.begin\nconst end = msg.payload.end\n\nmsg.begin_time = begin\nmsg.end_time = end\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 280,
        "y": 260,
        "wires": [
            [
                "6d93c360.fd3f8c"
            ]
        ]
    },
    {
        "id": "b2c29814.3f3498",
        "type": "function",
        "z": "41d5e1f9.f8d97",
        "name": "save trigger time",
        "func": "msg.args.trigger_time = new Date(msg.payload)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 260,
        "y": 180,
        "wires": [
            [
                "18898ac9.f39755"
            ]
        ]
    },
    {
        "id": "3262c9.b2389d38",
        "type": "function",
        "z": "41d5e1f9.f8d97",
        "name": "validate env variable",
        "func": "const ENV = [\n    \"device_id\",\n    \"query_channel_id\",\n    \"power_on_channel_id\",\n    \"power_off_channel_id\"\n]\n\nfor (var item in ENV)\n{\n    const v = env.get(ENV[item])\n    if (v === '' || v === undefined)\n    {\n        node.error(ENV[item] + \" env variable not set\")\n        return\n    }\n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 280,
        "y": 80,
        "wires": [
            [
                "20824925.c552b6"
            ]
        ]
    },
    {
        "id": "20824925.c552b6",
        "type": "function",
        "z": "41d5e1f9.f8d97",
        "name": "init args",
        "func": "msg.args = {}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 240,
        "y": 120,
        "wires": [
            [
                "b2c29814.3f3498"
            ]
        ]
    },
    {
        "id": "60f70281.2d7b6c",
        "type": "qi-state-duration",
        "z": "b920ea59.74bac8",
        "name": "",
        "stateName": "power_on_tag",
        "x": 160,
        "y": 220,
        "wires": [
            [
                "2b72477c.8cfde8"
            ]
        ]
    },
    {
        "id": "aaf739d5.59ad68",
        "type": "qi-query-history",
        "z": "b920ea59.74bac8",
        "name": "",
        "query": "",
        "x": 160,
        "y": 140,
        "wires": [
            [
                "9e77efa.d07cc1"
            ]
        ]
    },
    {
        "id": "3c590ded.764e12",
        "type": "inject",
        "z": "b920ea59.74bac8",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "10",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 150,
        "y": 60,
        "wires": [
            [
                "2eb56074.0d8d9"
            ]
        ]
    },
    {
        "id": "2eb56074.0d8d9",
        "type": "subflow:41d5e1f9.f8d97",
        "z": "b920ea59.74bac8",
        "name": "",
        "env": [
            {
                "name": "device_id",
                "type": "str",
                "value": "work_time"
            },
            {
                "name": "query_channel_id",
                "type": "str",
                "value": "power_on_tag"
            },
            {
                "name": "power_on_channel_id",
                "type": "str",
                "value": "fx5u_power_on_time"
            },
            {
                "name": "power_off_channel_id",
                "type": "str",
                "value": "fx5u_power_off_time"
            }
        ],
        "x": 200,
        "y": 100,
        "wires": [
            [
                "aaf739d5.59ad68"
            ]
        ]
    },
    {
        "id": "556ce8a2.022d98",
        "type": "qi-chameleon-sink",
        "z": "b920ea59.74bac8",
        "name": "",
        "x": 160,
        "y": 300,
        "wires": []
    },
    {
        "id": "d8727067.2fa32",
        "type": "trigger",
        "z": "3f489316.51490c",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "10",
        "extend": true,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "name": "",
        "x": 310,
        "y": 240,
        "wires": [
            [
                "69c091cc.e3f8e"
            ]
        ]
    },
    {
        "id": "69c091cc.e3f8e",
        "type": "function",
        "z": "3f489316.51490c",
        "name": "count_event",
        "func": "const at = msg.payload.at\n\nmsg.payload = {\n    \"deviceId\": \"work_time\",\n    \"at\": at,\n    \"channels\": {\n        \"count_event\": 0\n    }\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 510,
        "y": 240,
        "wires": [
            [
                "99e21337.34f63"
            ]
        ]
    },
    {
        "id": "997426a3.0067a8",
        "type": "qi-query-history",
        "z": "1d6815dd.b3faaa",
        "name": "",
        "query": "",
        "x": 160,
        "y": 140,
        "wires": [
            [
                "648f4130.92fd6"
            ]
        ]
    },
    {
        "id": "5337583b.d6e9f8",
        "type": "inject",
        "z": "1d6815dd.b3faaa",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "10",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 150,
        "y": 60,
        "wires": [
            [
                "c8e4ac92.4c513"
            ]
        ]
    },
    {
        "id": "648f4130.92fd6",
        "type": "function",
        "z": "1d6815dd.b3faaa",
        "name": "check power on tag",
        "func": "let channel_id = msg.channel_id\nlet datetime_now = new Date()\nlet date_now = new Date(datetime_now.getFullYear(),datetime_now.getMonth(),datetime_now.getDate())\nlet query_data = msg.payload[0]\nlet query_date_time = msg.payload[0].time\nlet query_time = new Date(query_date_time.getFullYear(),query_date_time.getMonth(),query_date_time.getDate())\nlet today_at = new Date(datetime_now.getFullYear(),datetime_now.getMonth(),datetime_now.getDate(),0,0,0)\nlet yesterday_at = new Date(datetime_now.getFullYear(),datetime_now.getMonth(),datetime_now.getDate()-1,23,59,59)\n\n\nif (date_now > query_time && query_data.power_on_tag !== 0){\n    power_off_payload = {\n            payload : {\n                \"deviceId\": \"work_time\",\n                \"at\": {\n                    \"sec\": Math.floor(yesterday_at / 1000),\n                    \"us\":0\n                },\n                \"channels\": {}\n            }\n    }\n    power_off_payload.payload.channels[channel_id] = 0\n    \n    power_on_payload = {\n            payload : {\n                \"deviceId\": \"work_time\",\n                \"at\": {\n                    \"sec\": Math.floor(today_at / 1000),\n                    \"us\":0\n                },\n                \"channels\": {}\n            }\n    }\n    \n    power_on_payload.payload.channels[channel_id] = 1\n\n    return [[power_off_payload, power_on_payload]];\n}\nelse{\n    return\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 170,
        "y": 180,
        "wires": [
            [
                "54553847.6c9578",
                "68b85cb2.174244"
            ]
        ]
    },
    {
        "id": "54553847.6c9578",
        "type": "qi-chameleon-sink",
        "z": "1d6815dd.b3faaa",
        "name": "",
        "x": 160,
        "y": 220,
        "wires": []
    },
    {
        "id": "9ad63272.30d54",
        "type": "function",
        "z": "3f489316.51490c",
        "name": "total count",
        "func": "let at = msg.plc_time\n\n\nif (msg.payload[0])\n{\n    let count = msg.payload[0].count\n    msg.payload = {\n        \"deviceId\": \"work_time\",\n        \"at\": at,\n        \"channels\": {\n            \"count\": count += 1\n        }\n    }\n}\nelse\n{\n    msg.payload = {\n        \"deviceId\": \"work_time\",\n        \"at\": at,\n        \"channels\": {\n            \"count\": 1\n        }\n    }\n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 730,
        "y": 300,
        "wires": [
            [
                "e090623a.0481e"
            ]
        ]
    },
    {
        "id": "53e799ff.7795b8",
        "type": "function",
        "z": "8dfcbe36.856d6",
        "name": "query data",
        "func": "const begin_time = msg.begin_time\nconst end_time = msg.end_time\nconst device_id = env.get(\"device_id\")\nconst channel_id = env.get(\"query_channel_id\")\n\nmsg.query = `\n    SELECT last(${channel_id}) as ${channel_id}\n    FROM ${device_id}\n    WHERE time >= '${begin_time.toISOString()}'\n    AND time < '${end_time.toISOString()}'\n`\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 290,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "c7098432.5e9038",
        "type": "qi-interval-boundary",
        "z": "8dfcbe36.856d6",
        "name": "",
        "timezone": "local",
        "intervalDuration": "86400",
        "shiftInterval": "0",
        "x": 310,
        "y": 200,
        "wires": [
            [
                "741a37c2.74a658"
            ]
        ]
    },
    {
        "id": "741a37c2.74a658",
        "type": "function",
        "z": "8dfcbe36.856d6",
        "name": "save begin/end time",
        "func": "const begin = msg.payload.begin\nconst end = msg.payload.end\n\nmsg.begin_time = begin\nmsg.end_time = end\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 320,
        "y": 240,
        "wires": [
            [
                "53e799ff.7795b8"
            ]
        ]
    },
    {
        "id": "4f6919f9.a67e18",
        "type": "function",
        "z": "8dfcbe36.856d6",
        "name": "save trigger time",
        "func": "const dateTime = Date.now();\n\nmsg.payload = dateTime\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 300,
        "y": 160,
        "wires": [
            [
                "c7098432.5e9038"
            ]
        ]
    },
    {
        "id": "ec9467af.e21408",
        "type": "function",
        "z": "8dfcbe36.856d6",
        "name": "validate env variable",
        "func": "let at = msg.payload.at\nconst ENV = [\n    \"device_id\",\n    \"query_channel_id\"\n]\n\nfor (var item in ENV)\n{\n    const v = env.get(ENV[item])\n    if (v === '' || v === undefined)\n    {\n        node.error(ENV[item] + \" env variable not set\")\n        return\n    }\n}\n\nmsg.plc_time = at\nmsg.channel_id = env.get(\"query_channel_id\")\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 320,
        "y": 80,
        "wires": [
            [
                "90db6066.bbc48"
            ]
        ]
    },
    {
        "id": "90db6066.bbc48",
        "type": "function",
        "z": "8dfcbe36.856d6",
        "name": "init args",
        "func": "msg.args = {}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 280,
        "y": 120,
        "wires": [
            [
                "4f6919f9.a67e18"
            ]
        ]
    },
    {
        "id": "a6ba0795.21e098",
        "type": "subflow:8dfcbe36.856d6",
        "z": "3f489316.51490c",
        "name": "query lastest count",
        "env": [
            {
                "name": "device_id",
                "type": "str",
                "value": "work_time"
            },
            {
                "name": "query_channel_id",
                "type": "str",
                "value": "count"
            }
        ],
        "x": 310,
        "y": 300,
        "wires": [
            [
                "1afe2587.a3149a"
            ]
        ]
    },
    {
        "id": "1afe2587.a3149a",
        "type": "qi-query-history",
        "z": "3f489316.51490c",
        "name": "",
        "query": "",
        "x": 540,
        "y": 300,
        "wires": [
            [
                "9ad63272.30d54"
            ]
        ]
    },
    {
        "id": "e090623a.0481e",
        "type": "qi-chameleon-sink",
        "z": "3f489316.51490c",
        "name": "",
        "x": 920,
        "y": 300,
        "wires": []
    },
    {
        "id": "c8e4ac92.4c513",
        "type": "subflow:8dfcbe36.856d6",
        "z": "1d6815dd.b3faaa",
        "name": "",
        "env": [
            {
                "name": "device_id",
                "type": "str",
                "value": "work_time"
            },
            {
                "name": "query_channel_id",
                "type": "str",
                "value": "power_on_tag"
            }
        ],
        "x": 160,
        "y": 100,
        "wires": [
            [
                "997426a3.0067a8"
            ]
        ]
    },
    {
        "id": "2b72477c.8cfde8",
        "type": "function",
        "z": "b920ea59.74bac8",
        "name": "device_power_time",
        "func": "let at = Math.floor(new Date() / 1000)\nlet power_on_time = 0\nlet power_off_time = 1\nlet power_on_id = msg.power_on_channel_id\nlet power_off_id = msg.power_off_channel_id\nconst state_duration_list = msg.payload\n\nstate_duration_list.forEach(function (item){\n    if (item.state === 1)\n    {\n        power_on_time = Math.floor(item.duration / 1000);\n    }\n    else if (item.state === 0)\n    {\n        power_off_time = Math.floor(item.duration / 1000);\n    }\n})\n\nmsg.payload = {\n    \"deviceId\": \"work_time\",\n    \"at\": {\n        \"sec\": at,\n        \"us\":0\n    },\n    \"channels\": {}\n}\n\nmsg.payload.channels[power_on_id] = parseFloat((power_on_time / 3600).toFixed(2))\nmsg.payload.channels[power_off_id] = parseFloat((power_off_time / 3600).toFixed(2))\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 170,
        "y": 260,
        "wires": [
            [
                "556ce8a2.022d98"
            ]
        ]
    },
    {
        "id": "484ef5a4.e8d6dc",
        "type": "function",
        "z": "1d6815dd.b3faaa",
        "name": "",
        "func": "let datetime_now = new Date()\n// let yesterday_at = new Date(datetime.getFullYear(),datetime.getMonth(),datetime.getDate()-1,23,59,59)\n// let today_at = new Date(datetime.getFullYear(),datetime.getMonth(),datetime.getDate(),0,0,0)\n\n// msg.payload = \n// {\n//     \"yesterday_at\": Math.floor(new Date(yesterday_at) / 1000),\n//     \"today_at\": Math.floor(new Date(today_at) / 1000)\n// }\nlet channel_id = \"power_on_tag\"\nlet today_at = new Date(datetime_now.getFullYear(),datetime_now.getMonth(),datetime_now.getDate(),0,0,0)\nlet yesterday_at = new Date(datetime_now.getFullYear(),datetime_now.getMonth(),datetime_now.getDate()-1,23,59,59)\n\n\nif (new Date() > yesterday_at)\n{\n    power_off_payload = {\n            payload : {\n                \"deviceId\": \"work_time\",\n                \"at\": {\n                    \"sec\": Math.floor(yesterday_at / 1000),\n                    \"us\":0\n                },\n                \"channels\": {}\n            }\n    }\n    power_off_payload.payload.channels[channel_id] = 0\n    \n    power_on_payload = {\n            payload : {\n                \"deviceId\": \"work_time\",\n                \"at\": {\n                    \"sec\": Math.floor(today_at / 1000),\n                    \"us\":0\n                },\n                \"channels\": {}\n            }\n    }\n    \n    power_on_payload.payload.channels[channel_id] = 1\n\n    return [[power_off_payload, power_on_payload]];\n}\n\n// else if (new Date().getMonth() > yesterday_at.getMonth() && query_data.power_on_tag !== 0)\n// {\n//     power_off_payload = {\n//         \"deviceId\": \"work_time\",\n//         \"at\": {\n//             \"sec\": Math.floor(yesterday_at/ 1000),\n//             \"us\":0\n//         },\n//         \"channels\": {}\n//     }\n    \n//     power_off_payload.channels[channel_id] = 0\n    \n//     power_on_payload = {\n//                 \"deviceId\": \"work_time\",\n//         \"at\": {\n//             \"sec\": Math.floor(today_at / 1000),\n//             \"us\":0\n//         },\n//         \"channels\": {}\n//     }\n    \n//     power_on_payload.channels[channel_id] = 1\n\n//     return [power_off_payload, power_on_payload];\n// }\n// else\n// {\n//     return\n// }",
        "outputs": 1,
        "noerr": 0,
        "x": 590,
        "y": 540,
        "wires": [
            [
                "3e99b0f0.7a3e4",
                "98621f7c.7d649"
            ]
        ]
    },
    {
        "id": "4fcfb0dc.fc44e",
        "type": "inject",
        "z": "1d6815dd.b3faaa",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 380,
        "y": 540,
        "wires": [
            [
                "484ef5a4.e8d6dc"
            ]
        ]
    },
    {
        "id": "98621f7c.7d649",
        "type": "debug",
        "z": "1d6815dd.b3faaa",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 810,
        "y": 540,
        "wires": []
    },
    {
        "id": "6ee2c5ea.fc19dc",
        "type": "http request",
        "z": "cac8a52f.506a38",
        "name": "token_key request",
        "method": "POST",
        "ret": "obj",
        "paytoqs": false,
        "url": "http://{{ip_address}}/api/v1/auth",
        "tls": "",
        "proxy": "",
        "authType": "basic",
        "x": 470,
        "y": 220,
        "wires": [
            [
                "9b494bbc.593788"
            ]
        ]
    },
    {
        "id": "31de54c8.4c557c",
        "type": "function",
        "z": "cac8a52f.506a38",
        "name": "set header username password",
        "func": "msg.headers = {};\nmsg.headers = { 'Content-Type': 'application/json'}\n\nmsg.payload = {};\nmsg.payload={ \n    \"username\":env.get(\"username\"),\n    \"password\":env.get(\"password\")\n};\n\nmsg.ip_address = {};\nmsg.ip_address = env.get(\"ip_address\")\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 510,
        "y": 100,
        "wires": [
            [
                "af870c77.da194"
            ]
        ]
    },
    {
        "id": "776d7c51.2c1854",
        "type": "function",
        "z": "cac8a52f.506a38",
        "name": "prepare header",
        "func": "msg.headers = {\n    'Content-Type': 'application/json',\n    'Authorization': \"JWT \" + msg.token\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 460,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "9b494bbc.593788",
        "type": "function",
        "z": "cac8a52f.506a38",
        "name": "save token",
        "func": "msg.token = msg.payload.access_token\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 450,
        "y": 260,
        "wires": [
            [
                "776d7c51.2c1854"
            ]
        ]
    },
    {
        "id": "f0addc7.4e2d52",
        "type": "function",
        "z": "cac8a52f.506a38",
        "name": "validate env variable",
        "func": "const ENV = [\n    \"username\",\n    \"password\",\n    \"ip_address\"\n]\n\nfor (var item in ENV)\n{\n    const v = env.get(ENV[item])\n    if (v === '' || v === undefined)\n    {\n        node.error(ENV[item] + \" env variable not set\")\n        return\n    }\n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 240,
        "y": 100,
        "wires": [
            [
                "31de54c8.4c557c"
            ]
        ]
    },
    {
        "id": "af870c77.da194",
        "type": "change",
        "z": "cac8a52f.506a38",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "ip_address",
                "pt": "msg",
                "to": "ip_address",
                "tot": "env"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 470,
        "y": 160,
        "wires": [
            [
                "6ee2c5ea.fc19dc"
            ]
        ]
    },
    {
        "id": "4df90426.7df25c",
        "type": "inject",
        "z": "29b56909.768396",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 140,
        "y": 180,
        "wires": [
            [
                "5e5aec97.2aceb4"
            ]
        ]
    },
    {
        "id": "58e776fd.5c57c8",
        "type": "debug",
        "z": "29b56909.768396",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 1010,
        "y": 180,
        "wires": []
    },
    {
        "id": "5e5aec97.2aceb4",
        "type": "subflow:cac8a52f.506a38",
        "z": "29b56909.768396",
        "name": "parameter",
        "env": [
            {
                "name": "username",
                "type": "str",
                "value": "admin"
            },
            {
                "name": "password",
                "type": "str",
                "value": "p@55w0rd"
            },
            {
                "name": "ip_address",
                "type": "str",
                "value": "192.168.20.241"
            }
        ],
        "x": 300,
        "y": 180,
        "wires": [
            [
                "22138ded.528512"
            ]
        ]
    },
    {
        "id": "8a73471a.134928",
        "type": "http request",
        "z": "29b56909.768396",
        "name": "put connectivity request",
        "method": "PUT",
        "ret": "obj",
        "paytoqs": false,
        "url": "http://{{ip_address}}/api/v1/config/system/connectivity",
        "tls": "",
        "proxy": "",
        "authType": "basic",
        "x": 790,
        "y": 180,
        "wires": [
            [
                "58e776fd.5c57c8"
            ]
        ]
    },
    {
        "id": "22138ded.528512",
        "type": "function",
        "z": "29b56909.768396",
        "name": "payload of connectivity setting",
        "func": "msg.headers = {\n    'Content-Type': 'application/json',\n    'Authorization': \"JWT \" + msg.token\n}\n\nmsg.connectivity ={\n  \"enableRTPS\": false,\n  \"servers\": [\n    {\n      \"mqtt\": {\n        \"host\": \"10.15.44.1\",\n        \"port\": 1885\n      }\n    }\n  ]\n}\n\nmsg.payload = msg.connectivity;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 530,
        "y": 180,
        "wires": [
            [
                "8a73471a.134928"
            ]
        ]
    },
    {
        "id": "e8ce1fa5.80769",
        "type": "inject",
        "z": "29b56909.768396",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 140,
        "y": 280,
        "wires": [
            [
                "542d96f1.426218"
            ]
        ]
    },
    {
        "id": "c4a8d88b.96c238",
        "type": "debug",
        "z": "29b56909.768396",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 1010,
        "y": 280,
        "wires": []
    },
    {
        "id": "542d96f1.426218",
        "type": "subflow:cac8a52f.506a38",
        "z": "29b56909.768396",
        "name": "parameter",
        "env": [
            {
                "name": "username",
                "type": "str",
                "value": "admin"
            },
            {
                "name": "password",
                "type": "str",
                "value": "p@55w0rd"
            },
            {
                "name": "ip_address",
                "type": "str",
                "value": "192.168.20.241"
            }
        ],
        "x": 300,
        "y": 280,
        "wires": [
            [
                "5192789c.96c978"
            ]
        ]
    },
    {
        "id": "484bcdb2.554b64",
        "type": "http request",
        "z": "29b56909.768396",
        "name": "put qold config request",
        "method": "PUT",
        "ret": "obj",
        "paytoqs": false,
        "url": "http://{{ip_address}}/api/v1/qold/config",
        "tls": "",
        "proxy": "",
        "authType": "basic",
        "x": 780,
        "y": 280,
        "wires": [
            [
                "c4a8d88b.96c238"
            ]
        ]
    },
    {
        "id": "5192789c.96c978",
        "type": "function",
        "z": "29b56909.768396",
        "name": "payload of qold setting",
        "func": "msg.headers = {\n    'Content-Type': 'application/json',\n    'Authorization': \"JWT \" + msg.token\n}\n\nmsg.qold ={\n    \"flushPeriodMin\":60,\n    \"timezone\":\"+08:00\"\n}\n\nmsg.payload = msg.qold;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 500,
        "y": 280,
        "wires": [
            [
                "484bcdb2.554b64"
            ]
        ]
    },
    {
        "id": "3e99b0f0.7a3e4",
        "type": "qi-chameleon-sink",
        "z": "1d6815dd.b3faaa",
        "name": "",
        "x": 820,
        "y": 600,
        "wires": []
    },
    {
        "id": "96628cbc.352f5",
        "type": "qi-chameleon-source",
        "z": "abf4d1c6.97531",
        "name": "",
        "deviceId": "fx5u-100m",
        "x": 170,
        "y": 320,
        "wires": [
            [
                "b8e89200.a0de3"
            ]
        ]
    },
    {
        "id": "2ea6a1b4.5fa8fe",
        "type": "qi-chameleon-sink",
        "z": "abf4d1c6.97531",
        "name": "",
        "x": 440,
        "y": 440,
        "wires": []
    },
    {
        "id": "b8e89200.a0de3",
        "type": "subflow:6d5fe9c2.7d2bd8",
        "z": "abf4d1c6.97531",
        "name": "",
        "env": [],
        "x": 450,
        "y": 320,
        "wires": [
            [
                "ebf140fb.927f4"
            ]
        ]
    },
    {
        "id": "ebf140fb.927f4",
        "type": "subflow:b21e5ed3.f60f7",
        "z": "abf4d1c6.97531",
        "name": "",
        "env": [
            {
                "name": "device_id",
                "type": "str",
                "value": "work_time"
            }
        ],
        "x": 450,
        "y": 380,
        "wires": [
            [
                "2ea6a1b4.5fa8fe"
            ]
        ]
    },
    {
        "id": "9e77efa.d07cc1",
        "type": "function",
        "z": "b920ea59.74bac8",
        "name": "append until",
        "func": "const trigger_time = new Date()\n\nmsg.until = trigger_time\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 150,
        "y": 180,
        "wires": [
            [
                "60f70281.2d7b6c"
            ]
        ]
    },
    {
        "id": "68b85cb2.174244",
        "type": "debug",
        "z": "1d6815dd.b3faaa",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 470,
        "y": 220,
        "wires": []
    }
]